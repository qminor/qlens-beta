# The correct lens model for the simulated data used here is as follows:
# alpha (b=5, alpha=1 s=0, q=0.7, theta=90, center=(0.9,0.3)
# external shear (gamma=0.1, theta=40 degrees)
# Source point: (0.5, 0.7)
#
# In this script we show how to infer these parameters by fitting a lens model
# to the simulated data using nested sampling.

lens clear              # Just in case we were doing something else before this
imgdata clear           # Just in case we already had image data loaded before this

fit label alpha_nest    # This labels the files that will be produced by the lens fitting
fit method nest         # nested sampling
sci_notation off        # This is just up to your personal preference
central_image off       # The image data does not include a central image, so this tells QLens not to search for one.
imgdata read alphafit.dat    # Loads in the image data
imgdata                      # Shows the image data so you can see what it looks like

# Here are some tips for deciding your initial guess for the lens parameters:
# Use the scale of the images to guess the Einstein radius.
# Always fix alpha=1 and s=0 (singular isothermal ellipsoid model). These parameters usually cannot be
#    constrained well unless we have time delays or multiple source points.
# The center of the lens can often be guessed at by averaging the image positions (or using the center of the
#    lens galaxy in the image if it is visible).
# It may only be possible to constrain both the external shear and axis ratio q if image fluxes or time delays
#    can be used in addition to the image positions. If you do model the external shear, guess a small
#    but nonzero value for both gamma and the angle, as we do here.
# Nested sampling requires lower and upper bounds as well, so pick a conservative but physically sensible
#    range for each parameter.

shear_components on # The parameter space is simpler to explore if we use the shear components, rather than shear magnitude and angle

pause
fit lens alpha 4.5 1 0 0.7 90 0.9 0.3 shear=0.0 0.1  # For the parameters we will vary, the initial "guess" value here is not actually used
                                                     #    by the nested sampling routine--only the ranges are important (see following lines)
1 0 0 1 1 1 1 1 1                                   #vary flags; here we vary everything except for alpha and s (core size)
4 6                                                 # Nested sampling requires that we set lower and upper bounds for each parameter we are varying 
0.2 1                                               # ...
20 155
0.3 1.3
0 0.6
-0.2 0.2
-0.2 0.2

analytic_bestfit_src on   # This tells qlens to solve for the best-fit source coordinates analytically during the fit, so they will not
                          # be varied as free parameters (makes it converge faster, however you won't be able to infer the uncertainties
                          # in the source position if you do this).
pause

# The following is only necessary if analytic_bestfit_src is off, since then the source coordinates are free parameters
#fit sourcept 0.6 0.5    # The initial guess for the source point is not actually used by T-Walk; only limits (next two lines) are used
#0 1
#0.2 1.2

# By default, the chi-square function is set to the source-plane chi-square (see B.4.6 of the Saas Fee Lectures by Kochanek (2004))
# This often works well enough for a first-run fit, and should be used especially if the image-plane chi-square has trouble converging.
# If your best-fit point returns the wrong number of images, however, try switching to the image plane chi-square instead
imgplane_chisq off    # using source plane chi-square (this is the default)

chisqflux on            # This means we use the image fluxes in the fit (very useful if you can use them, but often cannot)
chisq_time_delays off   # Don't use time delays (this is the default; time delays are only available for certain quasar lenses)
n_livepts = 1000       # This affects how well the nested sampler explores the parameter space;
                        #    bigger value --> more points and better sampling, but takes longer to converge

# The nested sampling finishes when the value of 'test' reaches 2; it may take awhile (up to ~30 mins depending on your machine)
# to finish in this example. To make the nested sampling run faster, compile QLens with MPI and run it with multiple processes

fit run  # FYI: you can interrupt the nested sampling at any time by pressing CTRL-C, e.g. if it is clearly not converging well

# Once the nested sampling finishes, you can plot the resulting posterior probability distributions using the 'mkdist' tool,
# included with qlens, from the UNIX command line. For a quick start, you can go to the directory 'chains_alpha_nest' and type
# 'mkdist -n40 -N40 -SP', then view the resulting PDF files that get created.

fit use_bestfit
fit chisq
# You may want to minimize the chi-square afterword, starting from the best-fit point returned by nested sampling
#fit method simplex
#fit run

