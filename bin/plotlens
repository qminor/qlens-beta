#!/bin/bash
# This script interfaces with gnuplot to produce plots (either to the screen, or to a file)
# from within qlens.

PTSIZE=1 # default point size
PTTYPE=7 # default point type
LINEWIDTH=1 # default line width
FONTSIZE=10 # default font size for postscript plots
COLORBOX=1 # show color bar for pixel map plots
KEY=0 # plot key within figure (1 = outside, -1 = no key)
SQUARE_AXES=0
SHOW_GRID=0
SHOW_MULTS=0
TITLE=""
SETTERM=""
FILENAME=""
RANGE=""
TERM=""
PLOTDIR="."
SET_CBRANGE=0
CBMIN=-1e30
CBMAX=1e30
INCLUDE_CONTOURS=0
NCONT=18

COMMAND=$1
shift

for VAR in "$@"; do
	if [[ $VAR == "square" ]]; then
		SQUARE_AXES=1
	fi

	if [[ $VAR == "grid" ]]; then
		SHOW_GRID=1
	fi

	if [[ $VAR == "nocb" ]]; then
		COLORBOX=0
	fi

	if [[ $VAR == "showmults" ]]; then
		SHOW_MULTS=0
	fi


	if [[ $VAR == "cont" ]]; then
		# contours can only be plotted for a few modes, etc. plotting kappa or potential
		INCLUDE_CONTOURS=1
	fi

	if [[ $VAR == *'title='* ]]; then
		TITLE=${VAR#title=}
		if [[ $TITLE == *'"'* ]]; then
			TITLE=${VAR##\"}
		fi
	fi

	if [[ $VAR == *'term='* ]]; then
		TERM=${VAR#term=}
	fi

	if [[ $VAR == *'cbmin='* ]]; then
		CBMIN=${VAR#cbmin=}
		SET_CBRANGE=1
	fi

	if [[ $VAR == *'cbmax='* ]]; then
		CBMAX=${VAR#cbmax=}
		SET_CBRANGE=1
	fi

	if [[ $VAR == "cb6" ]]; then
		# natural colorbar settings for normalized residuals
		CBMIN=-6
		CBMAX=6
		SET_CBRANGE=1
	fi

	if [[ $VAR == "cb5" ]]; then
		# natural colorbar settings for normalized residuals
		CBMIN=-5
		CBMAX=5
		SET_CBRANGE=1
	fi

	if [[ $VAR == "cb4" ]]; then
		# natural colorbar settings for normalized residuals
		CBMIN=-4
		CBMAX=4
		SET_CBRANGE=1
	fi

	if [[ $VAR == "cb3" ]]; then
		# natural colorbar settings for normalized residuals
		CBMIN=-3
		CBMAX=3
		SET_CBRANGE=1
	fi

	if [[ $VAR == *'ncont='* ]]; then
		NCONT=${VAR#ncont=}
		INCLUDE_CONTOURS=1
	fi

	if [[ $VAR == *'file='* ]]; then
		FILENAME=${VAR#file=}
	fi

	if [[ $VAR == *'ps='* ]]; then
		PTSIZE=${VAR#ps=}
	fi

	if [[ $VAR == *'key='* ]]; then
		KEY=${VAR#key=}
	fi
	if [[ $VAR == *'pt='* ]]; then
		PTTYPE=${VAR#pt=}
	fi

	if [[ $VAR == *'fs='* ]]; then
		FONTSIZE=${VAR#fs=}
	fi

	if [[ $VAR == *'dir='* ]]; then
		PLOTDIR=${VAR#dir=}
	fi

	if [[ $VAR == *'lw='* ]]; then
		LINEWIDTH=${VAR#lw=}
	fi

	if [[ "$VAR" == *'['* ]]; then
		RANGE="$VAR"
	fi
done

if [[ $TERM != "" ]]; then
	if [[ $FILENAME == "" ]]; then
		echo "Error: filename required for terminal $TERM"
		exit
	else
		if [[ $TERM == "postscript" ]]; then TERM="$TERM eps"; fi
		#SETTERM="set terminal $TERM enhanced dashed color font 'Times-Roman,$FONTSIZE' size 7,6\nset tics font ', $FONTSIZE'\nset for [i=1:4] linetype i dashtype i\nset output '$PLOTDIR/$FILENAME'"   # the dashtype only works for gnuplot version 5 or later
		SETTERM="set terminal $TERM enhanced dashed color font 'Times-Roman,$FONTSIZE' size 7,6\nset tics font ', $FONTSIZE'\nset output '$PLOTDIR/$FILENAME'"
	fi
fi

SQAXES=""
if [[ $SQUARE_AXES == "1" ]]; then
	SQAXES="set size ratio -1"
	SETTERM="$SETTERM\n$SQAXES"
fi

if [[ $COLORBOX == "0" ]]; then
	SETTERM="$SETTERM\nunset colorbox";
fi

CBCOMMAND="set cbrange [:]"
if [[ $SET_CBRANGE == "1" ]]; then
	if [[ $CBMAX == "1e30" ]]; then
		CBCOMMAND="set cbrange [$CBMIN:]";
	elif [[ $CBMIN == "-1e30" ]]; then
		CBCOMMAND="set cbrange [:$CBMAX]";
	else
		CBCOMMAND="set cbrange [$CBMIN:$CBMAX]";
	fi
fi
SETTERM="$SETTERM\n$CBCOMMAND";

if [[ $TITLE != "" ]]; then
	if [[ $SETTERM == "" ]]; then
		SETTERM="set title '$TITLE'"
	else
		SETTERM="$SETTERM\nset title '$TITLE'"
	fi
fi

SETTERM="$SETTERM\nset sample 30000\nset xrange [:] noextend; set yrange [:] noextend"

if [[ $COMMAND == "imgpixel" ]]; then
	if [[ $INCLUDE_CONTOURS == 1 ]]; then
		COMMAND="imgpixel_nocc"
	fi
fi


if [[ $COMMAND == "crit" ]]
then
	PLOTCOMMAND="plot $RANGE '$PLOTDIR/crit.dat' w lines lw $LINEWIDTH lc 0 t 'critical curves'"
	if [[ $TERM != "" ]]; then
		KEYPLOT="set title ' '\nplot [][1e12:2e12] '$PLOTDIR/crit.dat' w lines lw $LINEWIDTH lc 0 t 'critical curves'"
		PLOTLINE="$SETTERM\nset multiplot\nunset key"
		if [[ $KEY != -1 ]]; then
			PLOTLINE="$PLOTLINE\n$PLOTCOMMAND\nset key samplen 2\nunset tics\nunset border\nunset xlabel\nunset ylabel"
		else
			PLOTLINE="$SETTERM\nset multiplot\nunset key\nset key off\n$PLOTCOMMAND\nunset tics\nunset border\nunset xlabel\nunset ylabel\n$KEYPLOT"
		fi
		PLOTLINE="$PLOTLINE\n$KEYPLOT"
	else
		PLOTLINE="$SETTERM\n$PLOTCOMMAND"
	fi
elif [[ $COMMAND == "caust" ]]
then
	PLOTCOMMAND="plot $RANGE '$PLOTDIR/crit.dat' using 3:4 w lines lw $LINEWIDTH lc 0 t 'caustics'"
	if [[ $TERM != "" ]]; then
		KEYPLOT="set title ' '\nplot [][1e12:2e12] '$PLOTDIR/crit.dat' using 3:4 w lines lw $LINEWIDTH lc 0 t 'caustics'"
		if [[ $KEY != -1 ]]; then
			PLOTLINE="$SETTERM\nset multiplot\nunset key\n$PLOTCOMMAND\nset key samplen 2\nunset tics\nunset border\nunset xlabel\nunset ylabel\n$KEYPLOT"
		else
			PLOTLINE="$SETTERM\nset multiplot\nunset key\nset key off\n$PLOTCOMMAND\nunset tics\nunset border\nunset xlabel\nunset ylabel\n$KEYPLOT"
		fi
	else
		PLOTLINE="$SETTERM\n$PLOTCOMMAND"
	fi
elif [[ $COMMAND == "sbprofile" ]]
then
	PLOTCOMMAND="set logscale xy\nplot $RANGE '$PLOTDIR/sbprof.dat' w lines lw $LINEWIDTH lc 0 t 'surface brightness profile'"
	if [[ $TERM != "" ]]; then
		KEYPLOT="set title ' '\nplot [][1e12:2e12] '$PLOTDIR/sbprof.dat' w lines lw $LINEWIDTH lc 0 t 'surface brightness profile'"
		PLOTLINE="$SETTERM\nset multiplot\nunset key"
		if [[ $KEY != -1 ]]; then
			PLOTLINE="$PLOTLINE\n$PLOTCOMMAND\nset key samplen 2\nunset tics\nunset border\nunset xlabel\nunset ylabel"
		else
			PLOTLINE="$SETTERM\nset multiplot\nunset key\nset key off\n$PLOTCOMMAND\nunset tics\nunset border\nunset xlabel\nunset ylabel\n$KEYPLOT"
		fi
		PLOTLINE="$PLOTLINE\n$KEYPLOT"
	else
		PLOTLINE="$SETTERM\n$PLOTCOMMAND"
	fi
elif [[ $COMMAND == "kappaprofile" ]]
then
	PLOTCOMMAND="set logscale xy\nplot $RANGE '$PLOTDIR/kappaprof.dat' w lines lw $LINEWIDTH lc 0 t 'kappa profile'"
	if [[ $TERM != "" ]]; then
		KEYPLOT="set title ' '\nplot [][1e12:2e12] '$PLOTDIR/kappaprof.dat' w lines lw $LINEWIDTH lc 0 t 'kappa profile'"
		PLOTLINE="$SETTERM\nset multiplot\nunset key"
		if [[ $KEY != -1 ]]; then
			PLOTLINE="$PLOTLINE\n$PLOTCOMMAND\nset key samplen 2\nunset tics\nunset border\nunset xlabel\nunset ylabel"
		else
			PLOTLINE="$SETTERM\nset multiplot\nunset key\nset key off\n$PLOTCOMMAND\nunset tics\nunset border\nunset xlabel\nunset ylabel\n$KEYPLOT"
		fi
		PLOTLINE="$PLOTLINE\n$KEYPLOT"
	else
		PLOTLINE="$SETTERM\n$PLOTCOMMAND"
	fi
elif [[ $COMMAND == "imgdat" ]]
then
	grep -v \" $PLOTDIR/imgdat.dat >$PLOTDIR/imgdat_notitles.dat
	PLOTCOMMAND="stats '$PLOTDIR/imgdat_notitles.dat'\nplot $RANGE for [IDX=1:STATS_blocks] '$PLOTDIR/imgdat.dat' index (IDX-1) u 1:2 w points pt $PTTYPE ps $PTSIZE t columnheader(1)"
	#PLOTCOMMAND="plot $RANGE '$PLOTDIR/imgdat.dat' i 0 u 1:2 w points pt $PTTYPE ps $PTSIZE t columnheader(1), '$PLOTDIR/imgdat.dat' i 1 u 1:2 w points pt $PTTYPE ps $PTSIZE t columnheader(1)"
	KEYPLOT="set title ' '\nplot [][1e12:2e12] for [IDX=1:STATS_blocks] '$PLOTDIR/imgdat.dat' index (IDX-1) u 1:2 w points pt $PTTYPE ps $PTSIZE t columnheader(1)"
	if [[ $TERM != "" ]]; then
		if [[ $KEY != -1 ]]; then
			PLOTLINE="$SETTERM\nset multiplot\nunset key\n$PLOTCOMMAND\nset key samplen 2\nunset tics\nunset border\nunset xlabel\nunset ylabel\n$KEYPLOT"
		else
			PLOTLINE="$SETTERM\nset multiplot\nunset key\nset key off\n$PLOTCOMMAND\nunset tics\nunset border\nunset xlabel\nunset ylabel\n$KEYPLOT"
		fi
	else
		PLOTLINE="$SETTERM\n$PLOTCOMMAND"
	fi
elif [[ $COMMAND == "image" ]]
then
	PLOTCOMMAND="plot $RANGE '$PLOTDIR/crit.dat' w lines lw $LINEWIDTH lc 0 t 'critical curves', '$PLOTDIR/imgs.dat' w points pt $PTTYPE lc 1 ps $PTSIZE t 'images'"
	KEYPLOT="set title ' '\nplot [][1e12:2e12] '$PLOTDIR/crit.dat' w lines lw $LINEWIDTH lc 0 t 'critical curves', '$PLOTDIR/imgs.dat' w points pt $PTTYPE ps $PTSIZE lc 1 t 'images'"
	if [[ $TERM != "" ]]; then
		if [[ $KEY != -1 ]]; then
			PLOTLINE="$SETTERM\nset multiplot\nunset key\n$PLOTCOMMAND\nset key samplen 2\nunset tics\nunset border\nunset xlabel\nunset ylabel\n$KEYPLOT"
		else
			PLOTLINE="$SETTERM\nset multiplot\nunset key\nset key off\n$PLOTCOMMAND\nunset tics\nunset border\nunset xlabel\nunset ylabel\n$KEYPLOT"
		fi
	else
		PLOTLINE="$SETTERM\n$PLOTCOMMAND"
	fi
elif [[ $COMMAND == "image_grid" ]]
then
	PLOTCOMMAND="plot $RANGE '$PLOTDIR/xgrid.dat' w lines lw $LINEWIDTH lc 1 t 'grid', '$PLOTDIR/crit.dat' w lines lw $LINEWIDTH lc 0 t 'critical curves', '$PLOTDIR/imgs.dat' w points pt $PTTYPE lc 3 ps $PTSIZE t 'images'"
	KEYPLOT="set title ' '\nplot [][1e12:2e12] '$PLOTDIR/xgrid.dat' w lines lw $LINEWIDTH lc 1 t 'grid', '$PLOTDIR/crit.dat' w lines lw $LINEWIDTH lc 0 t 'critical curves', '$PLOTDIR/imgs.dat' w points pt $PTTYPE ps $PTSIZE lc 3 t 'images'"
	if [[ $TERM != "" ]]; then
		if [[ $KEY != -1 ]]; then
			PLOTLINE="$SETTERM\nset multiplot\nunset key\n$PLOTCOMMAND\nset key samplen 2\nunset tics\nunset border\nunset xlabel\nunset ylabel\n$KEYPLOT"
		else
			PLOTLINE="$SETTERM\nset multiplot\nunset key\nset key off\n$PLOTCOMMAND\nunset tics\nunset border\nunset xlabel\nunset ylabel\n$KEYPLOT"
		fi
	else
		PLOTLINE="$SETTERM\n$PLOTCOMMAND"
	fi
elif [[ $COMMAND == "imgfit" ]]
then
	grep -v \" $PLOTDIR/imgdat.dat >$PLOTDIR/imgdat_notitles.dat
	if [[ $SHOW_GRID == 1 ]]; then
		PLOTCOMMAND="stats '$PLOTDIR/imgdat_notitles.dat'\nplot $RANGE '$PLOTDIR/xgrid.dat' w lines lc 1, '$PLOTDIR/crit.dat' w lines lw $LINEWIDTH lc 0 t 'critical curves', for [IDX=1:STATS_blocks] '$PLOTDIR/imgdat.dat' index (IDX-1) u 1:2 w points pt 6 ps $PTSIZE lc 3 t columnheader(1), for [IDX=1:STATS_blocks] '$PLOTDIR/imgs.dat' index (IDX-1) u 1:2 w points pt $PTTYPE ps $PTSIZE lc 1 t columnheader(1)"
	else
		PLOTCOMMAND="stats '$PLOTDIR/imgdat_notitles.dat'\nplot $RANGE '$PLOTDIR/crit.dat' w lines lw $LINEWIDTH lc 0 t 'critical curves', for [IDX=1:STATS_blocks] '$PLOTDIR/imgdat.dat' index (IDX-1) u 1:2 w points pt 6 ps $PTSIZE lc 3 t columnheader(1), for [IDX=1:STATS_blocks] '$PLOTDIR/imgs.dat' index (IDX-1) u 1:2 w points pt $PTTYPE ps $PTSIZE lc 1 t columnheader(1)"
	fi
	KEYPLOT="set title ' '\nplot [][1e12:2e12] '$PLOTDIR/crit.dat' w lines lw $LINEWIDTH lc 0 t 'critical curves', for [IDX=1:STATS_blocks] '$PLOTDIR/imgdat.dat' index (IDX-1) u 1:2 w points pt 6 ps $PTSIZE lc 2 t columnheader(1), for [IDX=1:STATS_blocks] '$PLOTDIR/imgs.dat' index (IDX-1) u 1:2 w points pt $PTTYPE ps $PTSIZE lc 1 t columnheader(1)"
	if [[ $TERM != "" ]]; then
		if [[ $KEY != -1 ]]; then
			PLOTLINE="$SETTERM\nset multiplot\nunset key\n$PLOTCOMMAND\nset key samplen 2\nunset tics\nunset border\nunset xlabel\nunset ylabel\n$KEYPLOT"
		else
			PLOTLINE="$SETTERM\nset multiplot\nunset key\nset key off\n$PLOTCOMMAND\nunset tics\nunset border\nunset xlabel\nunset ylabel\n$KEYPLOT"
		fi
	else
		PLOTLINE="$SETTERM\n$PLOTCOMMAND"
	fi
elif [[ $COMMAND == "imgfits" ]]
then
	grep -v \" $PLOTDIR/imgdat.dat >$PLOTDIR/imgdat_notitles.dat
	PLOTCOMMAND="stats '$PLOTDIR/imgdat_notitles.dat'\nplot $RANGE '$PLOTDIR/crit.dat' w lines lw $LINEWIDTH lc 0 t 'critical curves', for [IDX=1:STATS_blocks] '$PLOTDIR/imgdat.dat' index (IDX-1) u 1:2 w points pt IDX ps $PTSIZE lc 3 t columnheader(1), for [IDX=1:STATS_blocks] '$PLOTDIR/imgs.dat' index (IDX-1) u 1:2 w points pt IDX ps $PTSIZE lc 1 t columnheader(1)"
	KEYPLOT="set title ' '\nplot [][1e12:2e12] '$PLOTDIR/crit.dat' w lines lw $LINEWIDTH lc 0 t 'critical curves', for [IDX=1:STATS_blocks] '$PLOTDIR/imgdat.dat' index (IDX-1) u 1:2 w points pt IDX ps $PTSIZE lc 3 t columnheader(1), for [IDX=1:STATS_blocks] '$PLOTDIR/imgs.dat' index (IDX-1) u 1:2 w points pt IDX ps $PTSIZE lc 1 t columnheader(1)"
	if [[ $TERM != "" ]]; then
		if [[ $KEY != -1 ]]; then
			PLOTLINE="$SETTERM\nset multiplot\nunset key\n$PLOTCOMMAND\nset key samplen 2\nunset tics\nunset border\nunset xlabel\nunset ylabel\n$KEYPLOT"
		else
			PLOTLINE="$SETTERM\nset multiplot\nunset key\nset key off\n$PLOTCOMMAND\nunset tics\nunset border\nunset xlabel\nunset ylabel\n$KEYPLOT"
		fi
	else
		PLOTLINE="$SETTERM\n$PLOTCOMMAND"
	fi
elif [[ $COMMAND == "shearfits" ]]
then
	PLOTCOMMAND="plot $RANGE '$PLOTDIR/crit.dat' w lines lw $LINEWIDTH lc 0 t 'critical curves', '$PLOTDIR/shear.dat' u 1:2 w lines lw $LINEWIDTH lc 2 t 'shear data', '$PLOTDIR/shear.dat' u 3:4 w lines lw $LINEWIDTH lc 1 t 'model shear'"
	KEYPLOT="set title ' '\nplot [][1e12:2e12] '$PLOTDIR/crit.dat' w lines lw $LINEWIDTH lc 0 t 'critical curves', '$PLOTDIR/shear.dat' u 1:2 w lines lw $LINEWIDTH lc 2 t 'shear data', '$PLOTDIR/shear.dat' u 3:4 w lines lw $LINEWIDTH lc 1 t 'model shear'"
	if [[ $TERM != "" ]]; then
		if [[ $KEY != -1 ]]; then
			PLOTLINE="$SETTERM\nset multiplot\nunset key\n$PLOTCOMMAND\nset key samplen 2\nunset tics\nunset border\nunset xlabel\nunset ylabel\n$KEYPLOT"
		else
			PLOTLINE="$SETTERM\nset multiplot\nunset key\nset key off\n$PLOTCOMMAND\nunset tics\nunset border\nunset xlabel\nunset ylabel\n$KEYPLOT"
		fi
	else
		PLOTLINE="$SETTERM\n$PLOTCOMMAND"
	fi
elif [[ $COMMAND == "shearfits_nocc" ]]
then
	PLOTCOMMAND="plot $RANGE '$PLOTDIR/shear.dat' u 1:2 w lines lw $LINEWIDTH lc 2 t 'shear data', '$PLOTDIR/shear.dat' u 3:4 w lines lw $LINEWIDTH lc 1 t 'model shear'"
	KEYPLOT="set title ' '\nplot [][1e12:2e12] '$PLOTDIR/shear.dat' u 1:2 w lines lw $LINEWIDTH lc 2 t 'shear data', '$PLOTDIR/shear.dat' u 3:4 w lines lw $LINEWIDTH lc 1 t 'model shear'"
	if [[ $TERM != "" ]]; then
		if [[ $KEY != -1 ]]; then
			PLOTLINE="$SETTERM\nset multiplot\nunset key\n$PLOTCOMMAND\nset key samplen 2\nunset tics\nunset border\nunset xlabel\nunset ylabel\n$KEYPLOT"
		else
			PLOTLINE="$SETTERM\nset multiplot\nunset key\nset key off\n$PLOTCOMMAND\nunset tics\nunset border\nunset xlabel\nunset ylabel\n$KEYPLOT"
		fi
	else
		PLOTLINE="$SETTERM\n$PLOTCOMMAND"
	fi
elif [[ $COMMAND == "sheardata" ]]
then
	PLOTCOMMAND="plot $RANGE '$PLOTDIR/shear.dat' u 1:2 w lines lw $LINEWIDTH lc 2 t 'shear data'" 
	KEYPLOT="set title ' '\nplot [][1e12:2e12] '$PLOTDIR/shear.dat' u 1:2 w lines lw $LINEWIDTH lc 2 t 'shear data'"
	if [[ $TERM != "" ]]; then
		if [[ $KEY != -1 ]]; then
			PLOTLINE="$SETTERM\nset multiplot\nunset key\n$PLOTCOMMAND\nset key samplen 2\nunset tics\nunset border\nunset xlabel\nunset ylabel\n$KEYPLOT"
		else
			PLOTLINE="$SETTERM\nset multiplot\nunset key\nset key off\n$PLOTCOMMAND\nunset tics\nunset border\nunset xlabel\nunset ylabel\n$KEYPLOT"
		fi
	else
		PLOTLINE="$SETTERM\n$PLOTCOMMAND"
	fi

elif [[ $COMMAND == "imgfit_nocc" ]]
then
	grep -v \" $PLOTDIR/imgdat.dat >$PLOTDIR/imgdat_notitles.dat
	if [[ $SHOW_GRID == 1 ]]; then
		PLOTCOMMAND="stats '$PLOTDIR/imgdat_notitles.dat'\nplot $RANGE '$PLOTDIR/xgrid.dat' w lines lc 1, for [IDX=1:STATS_blocks] '$PLOTDIR/imgdat.dat' index (IDX-1) u 1:2 w points pt 6 ps $PTSIZE lc 3 t columnheader(1), for [IDX=1:STATS_blocks] '$PLOTDIR/imgs.dat' index (IDX-1) u 1:2 w points pt $PTTYPE ps $PTSIZE lc 1 t columnheader(1)"
	else
		PLOTCOMMAND="stats '$PLOTDIR/imgdat_notitles.dat'\nplot $RANGE for [IDX=1:STATS_blocks] '$PLOTDIR/imgdat.dat' index (IDX-1) u 1:2 w points pt 6 ps $PTSIZE lc 3 t columnheader(1), for [IDX=1:STATS_blocks] '$PLOTDIR/imgs.dat' index (IDX-1) u 1:2 w points pt $PTTYPE ps $PTSIZE lc 1 t columnheader(1)"
	fi
	KEYPLOT="set title ' '\nplot [][1e12:2e12] for [IDX=1:STATS_blocks] '$PLOTDIR/imgdat.dat' index (IDX-1) u 1:2 w points pt 6 ps $PTSIZE lc 2 t columnheader(1), for [IDX=1:STATS_blocks] '$PLOTDIR/imgs.dat' index (IDX-1) u 1:2 w points pt $PTTYPE ps $PTSIZE lc 1 t columnheader(1)"
	if [[ $TERM != "" ]]; then
		if [[ $KEY != -1 ]]; then
			PLOTLINE="$SETTERM\nset multiplot\nunset key\n$PLOTCOMMAND\nset key samplen 2\nunset tics\nunset border\nunset xlabel\nunset ylabel\n$KEYPLOT"
		else
			PLOTLINE="$SETTERM\nset multiplot\nunset key\nset key off\n$PLOTCOMMAND\nunset tics\nunset border\nunset xlabel\nunset ylabel\n$KEYPLOT"
		fi
	else
		PLOTLINE="$SETTERM\n$PLOTCOMMAND"
	fi
elif [[ $COMMAND == "srcfit" ]]
then
	grep -v \" $PLOTDIR/srcs.dat >$PLOTDIR/imgdat_notitles.dat
	PLOTCOMMAND="stats '$PLOTDIR/imgdat_notitles.dat'\nplot $RANGE '$PLOTDIR/crit.dat' u 3:4 w lines lw $LINEWIDTH lc 0 t 'caustics', for [IDX=1:STATS_blocks] '$PLOTDIR/srcs.dat' index (IDX-1) u 1:2 w points pt $PTTYPE ps $PTSIZE lc 1 t columnheader(1)"
	KEYPLOT="set title ' '\nplot [][1e12:2e12] '$PLOTDIR/crit.dat' u 3:4 w lines lw $LINEWIDTH lc 0 t 'caustics', for [IDX=1:STATS_blocks] '$PLOTDIR/srcs.dat' index (IDX-1) u 1:2 w points pt $PTTYPE ps $PTSIZE lc 1 t columnheader(1)"
	if [[ $TERM != "" ]]; then
		if [[ $KEY != -1 ]]; then
			PLOTLINE="$SETTERM\nset multiplot\nunset key\n$PLOTCOMMAND\nset key samplen 2\nunset tics\nunset border\nunset xlabel\nunset ylabel\n$KEYPLOT"
		else
			PLOTLINE="$SETTERM\nset multiplot\nunset key\nset key off\n$PLOTCOMMAND\nunset tics\nunset border\nunset xlabel\nunset ylabel\n$KEYPLOT"
		fi
	else
		PLOTLINE="$SETTERM\n$PLOTCOMMAND"
	fi
elif [[ $COMMAND == "srcfit_nocc" ]]
then
	grep -v \" $PLOTDIR/srcs.dat >$PLOTDIR/imgdat_notitles.dat
	PLOTCOMMAND="stats '$PLOTDIR/imgdat_notitles.dat'\nplot $RANGE for [IDX=1:STATS_blocks] '$PLOTDIR/srcs.dat' index (IDX-1) u 1:2 w points pt $PTTYPE ps $PTSIZE lc 1 t columnheader(1)"
	KEYPLOT="set title ' '\nplot [][1e12:2e12] for [IDX=1:STATS_blocks] '$PLOTDIR/srcs.dat' index (IDX-1) u 1:2 w points pt $PTTYPE ps $PTSIZE lc 1 t columnheader(1)"
	if [[ $TERM != "" ]]; then
		if [[ $KEY != -1 ]]; then
			PLOTLINE="$SETTERM\nset multiplot\nunset key\n$PLOTCOMMAND\nset key samplen 2\nunset tics\nunset border\nunset xlabel\nunset ylabel\n$KEYPLOT"
		else
			PLOTLINE="$SETTERM\nset multiplot\nunset key\nset key off\n$PLOTCOMMAND\nunset tics\nunset border\nunset xlabel\nunset ylabel\n$KEYPLOT"
		fi
	else
		PLOTLINE="$SETTERM\n$PLOTCOMMAND"
	fi
elif [[ $COMMAND == "srcfits" ]]
then
	grep -v \" $PLOTDIR/srcs.dat >$PLOTDIR/imgdat_notitles.dat
	PLOTCOMMAND="stats '$PLOTDIR/imgdat_notitles.dat'\nplot $RANGE '$PLOTDIR/crit.dat' u 3:4 w lines lw $LINEWIDTH lc 0 t 'caustics', for [IDX=1:STATS_blocks] '$PLOTDIR/srcs.dat' index (IDX-1) u 1:2 w points pt IDX ps $PTSIZE lc 1 t columnheader(1)"
	KEYPLOT="set title ' '\nplot [][1e12:2e12] '$PLOTDIR/crit.dat' u 3:4 w lines lw $LINEWIDTH lc 0 t 'caustics', for [IDX=1:STATS_blocks] '$PLOTDIR/srcs.dat' index (IDX-1) u 1:2 w points pt IDX ps $PTSIZE lc 1 t columnheader(1)"
	if [[ $TERM != "" ]]; then
		if [[ $KEY != -1 ]]; then
			PLOTLINE="$SETTERM\nset multiplot\nunset key\n$PLOTCOMMAND\nset key samplen 2\nunset tics\nunset border\nunset xlabel\nunset ylabel\n$KEYPLOT"
		else
			PLOTLINE="$SETTERM\nset multiplot\nunset key\nset key off\n$PLOTCOMMAND\nunset tics\nunset border\nunset xlabel\nunset ylabel\n$KEYPLOT"
		fi
	else
		PLOTLINE="$SETTERM\n$PLOTCOMMAND"
	fi
elif [[ $COMMAND == "srcptfit" ]]
then
	grep -v \" $PLOTDIR/srcs.dat >$PLOTDIR/srcs_notitles.dat
	PLOTCOMMAND="stats '$PLOTDIR/srcs_notitles.dat'\nplot $RANGE '$PLOTDIR/crit.dat' u 3:4 w lines lw $LINEWIDTH lc 0 t 'caustics', for [IDX=1:STATS_blocks] '$PLOTDIR/srcs.dat' index (IDX-1) u 1:2 w points pt 6 ps $PTSIZE lc 2 t columnheader(1), for [IDX=1:STATS_blocks] '$PLOTDIR/srcfit.dat' index (IDX-1) u 1:2 w points pt $PTTYPE ps $PTSIZE lc 1 t columnheader(1)"
	KEYPLOT="set title ' '\nplot [][1e12:2e12] '$PLOTDIR/crit.dat' u 3:4 w lines lw $LINEWIDTH lc 0 t 'caustics', for [IDX=1:STATS_blocks] '$PLOTDIR/srcs.dat' index (IDX-1) u 1:2 w points pt 6 ps $PTSIZE lc 2 t columnheader(1), for [IDX=1:STATS_blocks] '$PLOTDIR/srcfit.dat' index (IDX-1) u 1:2 w points pt $PTTYPE ps $PTSIZE lc 1 t columnheader(1)"
	if [[ $TERM != "" ]]; then
		if [[ $KEY != -1 ]]; then
			PLOTLINE="$SETTERM\nset multiplot\nunset key\n$PLOTCOMMAND\nset key samplen 2\nunset tics\nunset border\nunset xlabel\nunset ylabel\n$KEYPLOT"
		else
			PLOTLINE="$SETTERM\nset multiplot\nunset key\nset key off\n$PLOTCOMMAND\nunset tics\nunset border\nunset xlabel\nunset ylabel\n$KEYPLOT"
		fi
	else
		PLOTLINE="$SETTERM\n$PLOTCOMMAND"
	fi
elif [[ $COMMAND == "srcptfits" ]]
then
	grep -v \" $PLOTDIR/srcs.dat >$PLOTDIR/srcs_notitles.dat
	PLOTCOMMAND="stats '$PLOTDIR/srcs_notitles.dat'\nplot $RANGE '$PLOTDIR/crit.dat' u 3:4 w lines lw $LINEWIDTH lc 0 t 'caustics', for [IDX=1:STATS_blocks] '$PLOTDIR/srcs.dat' index (IDX-1) u 1:2 w points pt IDX ps $PTSIZE lc 3 t columnheader(1), for [IDX=1:STATS_blocks] '$PLOTDIR/srcfit.dat' index (IDX-1) u 1:2 w points pt IDX ps $PTSIZE lc 1 t columnheader(1)"
	KEYPLOT="set title ' '\nplot [][1e12:2e12] '$PLOTDIR/crit.dat' u 3:4 w lines lw $LINEWIDTH lc 0 t 'caustics', for [IDX=1:STATS_blocks] '$PLOTDIR/srcs.dat' index (IDX-1) u 1:2 w points pt IDX ps $PTSIZE lc 3 t columnheader(1), for [IDX=1:STATS_blocks] '$PLOTDIR/srcfit.dat' index (IDX-1) u 1:2 w points pt IDX ps $PTSIZE lc 1 t columnheader(1)"
	if [[ $TERM != "" ]]; then
		if [[ $KEY != -1 ]]; then
			PLOTLINE="$SETTERM\nset multiplot\nunset key\n$PLOTCOMMAND\nset key samplen 2\nunset tics\nunset border\nunset xlabel\nunset ylabel\n$KEYPLOT"
		else
			PLOTLINE="$SETTERM\nset multiplot\nunset key\nset key off\n$PLOTCOMMAND\nunset tics\nunset border\nunset xlabel\nunset ylabel\n$KEYPLOT"
		fi
	else
		PLOTLINE="$SETTERM\n$PLOTCOMMAND"
	fi
elif [[ $COMMAND == "image_nocc" ]]
then
	PLOTCOMMAND="plot $RANGE '$PLOTDIR/imgs.dat' w points pt $PTTYPE ps $PTSIZE t 'images'"
	KEYPLOT="set title ' '\nplot [][1e12:2e12] '$PLOTDIR/imgs.dat' w points pt $PTTYPE ps $PTSIZE lc 1 t 'images'"
	if [[ $TERM != "" ]]; then
		if [[ $KEY != -1 ]]; then
			PLOTLINE="$SETTERM\nset multiplot\nunset key\n$PLOTCOMMAND\nset key samplen 2\nunset tics\nunset border\nunset xlabel\nunset ylabel\n$KEYPLOT"
		else
			PLOTLINE="$SETTERM\nset multiplot\nunset key\nset key off\n$PLOTCOMMAND\nunset tics\nunset border\nunset xlabel\nunset ylabel\n$KEYPLOT"
		fi
	else
		PLOTLINE="$SETTERM\n$PLOTCOMMAND"
	fi
elif [[ $COMMAND == "image_nocc_grid" ]]
then
	PLOTCOMMAND="plot $RANGE '$PLOTDIR/xgrid.dat' w lines lw $LINEWIDTH lc 1 t 'grid', '$PLOTDIR/imgs.dat' w points pt $PTTYPE ps $PTSIZE lc 3 t 'images'"
	KEYPLOT="set title ' '\nplot [][1e12:2e12] '$PLOTDIR/xgrid.dat' w lines lw $LINEWIDTH lc 1 t 'grid', '$PLOTDIR/imgs.dat' w points pt $PTTYPE ps $PTSIZE lc 3 t 'images'"
	if [[ $TERM != "" ]]; then
		if [[ $KEY != -1 ]]; then
			PLOTLINE="$SETTERM\nset multiplot\nunset key\n$PLOTCOMMAND\nset key samplen 2\nunset tics\nunset border\nunset xlabel\nunset ylabel\n$KEYPLOT"
		else
			PLOTLINE="$SETTERM\nset multiplot\nunset key\nset key off\n$PLOTCOMMAND\nunset tics\nunset border\nunset xlabel\nunset ylabel\n$KEYPLOT"
		fi
	else
		PLOTLINE="$SETTERM\n$PLOTCOMMAND"
	fi
elif [[ $COMMAND == "source" ]]
then
	PLOTCOMMAND="plot $RANGE '$PLOTDIR/crit.dat' using 3:4 w lines lw $LINEWIDTH lc 0 t 'caustics', '$PLOTDIR/srcs.dat' w points pt $PTTYPE ps $PTSIZE lc 1 t 'sources'"
	KEYPLOT="set title ' '\nplot [][1e12:2e12] '$PLOTDIR/crit.dat' using 3:4 w lines lw $LINEWIDTH lc 0 t 'caustics', '$PLOTDIR/srcs.dat' w points pt $PTTYPE ps $PTSIZE lc 1 t 'sources'"
	if [[ $TERM != "" ]]; then
		if [[ $KEY != -1 ]]; then
			PLOTLINE="$SETTERM\nset multiplot\nunset key\n$PLOTCOMMAND\nset key samplen 2\nunset tics\nunset border\nunset xlabel\nunset ylabel\n$KEYPLOT"
		else
			PLOTLINE="$SETTERM\nset multiplot\nunset key\nset key off\n$PLOTCOMMAND\nunset tics\nunset border\nunset xlabel\nunset ylabel\n$KEYPLOT"
		fi
	else
		PLOTLINE="$SETTERM\n$PLOTCOMMAND"
	fi
elif [[ $COMMAND == "images" ]]
then
	PTSIZE=`echo "$PTSIZE*0.3" | bc -l`
	PLOTCOMMAND="plot $RANGE '$PLOTDIR/crit.dat' w lines lw $LINEWIDTH lc 0 t 'critical curves'"
	KEYPLOT="set title ' '\nplot [][1e12:2e12] '$PLOTDIR/crit.dat' w lines lw $LINEWIDTH lc 0 t 'critical curves'"

	if [[ $SHOWMULTS == 1 ]]; then
		if [[ `head -1 images.singles` != "" ]]; then PLOTCOMMAND="$PLOTCOMMAND, '$PLOTDIR/images.singles' w points pt $PTTYPE ps $PTSIZE lc 2 t '1 image'"
			KEYPLOT="set title ' '; $KEYPLOT, '$PLOTDIR/images.singles' w points pt 5 ps 1.5 lc 2 t '1 image'"; fi
		if [[ `head -1 images.doubles` != "" ]]; then PLOTCOMMAND="$PLOTCOMMAND, '$PLOTDIR/images.doubles' w points pt $PTTYPE ps $PTSIZE lc 3 t '3 images'"
			KEYPLOT="set title ' '; $KEYPLOT, '$PLOTDIR/images.doubles' w points pt 5 ps 1.5 lc 3 t '3 images'"; fi
		if [[ `head -1 images.quads` != "" ]]; then PLOTCOMMAND="$PLOTCOMMAND, '$PLOTDIR/images.quads' w points pt $PTTYPE ps $PTSIZE lc 1 t '5 images'"
			KEYPLOT="set title ' '; $KEYPLOT, '$PLOTDIR/images.quads' w points pt 5 ps 1.5 lc 1 t '5 images'"; fi
		if [[ `head -1 images.cusps` != "" ]]; then PLOTCOMMAND="$PLOTCOMMAND, '$PLOTDIR/images.cusps' w points pt $PTTYPE ps $PTSIZE lc 5 t 'naked cusp'"
			KEYPLOT="set title ' '; $KEYPLOT, '$PLOTDIR/images.cusps' w points pt 5 ps 1.5 lc 5 t 'naked cusp'"; fi
		if [[ `head -1 images.weird` != "" ]]; then PLOTCOMMAND="$PLOTCOMMAND, '$PLOTDIR/images.weird' w points pt $PTTYPE ps $PTSIZE lc 4 t 'other'"
			KEYPLOT="set title ' '; $KEYPLOT, '$PLOTDIR/images.weird' w points pt 5 ps 1.5 lc 4 t 'other'"; fi
	else
		PLOTCOMMAND="$PLOTCOMMAND, '$PLOTDIR/imgs.dat' w points pt $PTTYPE ps $PTSIZE lc 8 t 'images'"
		KEYPLOT="set title ' '; $KEYPLOT, '$PLOTDIR/imgs.dat' w points pt 5 ps 1.5 lc 8 t 'images'"
	fi

	if [[ $TERM != "" ]]; then
		if [[ $KEY != -1 ]]; then
			PLOTLINE="$SETTERM\nset multiplot\nunset key\n$PLOTCOMMAND\nset key samplen 2\nunset tics\nunset border\nunset xlabel\nunset ylabel\n$KEYPLOT"
		else
			PLOTLINE="$SETTERM\nset multiplot\nunset key\nset key off\n$PLOTCOMMAND\nunset tics\nunset border\nunset xlabel\nunset ylabel\n$KEYPLOT"
		fi
	else
		PLOTLINE="$SETTERM\n$PLOTCOMMAND"
	fi
elif [[ $COMMAND == "images_nocc" ]]
then
	PTSIZE=`echo "$PTSIZE*0.3" | bc -l`
	PLOTCOMMAND="plot $RANGE "
	KEYPLOT="set title ' '\nplot [][1e12:2e12] "
	JUSTPLOTTED=0

	if [[ $SHOWMULTS == 1 ]]; then
		if [[ `head -1 images.singles` != "" ]]; then PLOTCOMMAND="$PLOTCOMMAND '$PLOTDIR/images.singles' w points pt $PTTYPE ps $PTSIZE lc 2 t '1 image'"
			KEYPLOT="set title ' '; $KEYPLOT '$PLOTDIR/images.singles' w points pt 5 ps 1.5 lc 2 t '1 image'"; JUSTPLOTTED=1; fi
		if [[ `head -1 images.doubles` != "" ]]; then
			if [[ "$JUSTPLOTTED" == 1 ]]; then PLOTCOMMAND="$PLOTCOMMAND,"; KEYPLOT="set title ' '; $KEYPLOT,"; fi
			PLOTCOMMAND="$PLOTCOMMAND '$PLOTDIR/images.doubles' w points pt $PTTYPE ps $PTSIZE lc 3 t '3 images'"
			KEYPLOT="set title ' '; $KEYPLOT '$PLOTDIR/images.doubles' w points pt 5 ps 1.5 lc 3 t '3 images'"
			JUSTPLOTTED=1; fi
		if [[ `head -1 images.quads` != "" ]]; then
			if [[ $JUSTPLOTTED -eq 1 ]]; then PLOTCOMMAND="$PLOTCOMMAND,"; KEYPLOT="set title ' '; $KEYPLOT,"; fi
			PLOTCOMMAND="$PLOTCOMMAND '$PLOTDIR/images.quads' w points pt $PTTYPE ps $PTSIZE lc 1 t '5 images'"
			KEYPLOT="set title ' '; $KEYPLOT '$PLOTDIR/images.quads' w points pt 5 ps 1.5 lc 1 t '5 images'"
			JUSTPLOTTED=1; fi
		if [[ `head -1 images.cusps` != "" ]]; then
			if [[ $JUSTPLOTTED -eq 1 ]]; then PLOTCOMMAND="$PLOTCOMMAND,"; KEYPLOT="set title ' '; $KEYPLOT,"; fi
			PLOTCOMMAND="$PLOTCOMMAND '$PLOTDIR/images.cusps' w points pt $PTTYPE ps $PTSIZE lc 5 t 'naked cusp'"
			KEYPLOT="set title ' '; $KEYPLOT '$PLOTDIR/images.cusps' w points pt 5 ps 1.5 lc 5 t 'naked cusp'"
			JUSTPLOTTED=1; fi
		if [[ `head -1 images.weird` != "" ]]; then
			if [[ $JUSTPLOTTED -eq 1 ]]; then PLOTCOMMAND="$PLOTCOMMAND,"; KEYPLOT="set title ' '; $KEYPLOT,"; fi
			PLOTCOMMAND="$PLOTCOMMAND '$PLOTDIR/images.weird' w points pt $PTTYPE ps $PTSIZE lc 4 t 'other'"
			KEYPLOT="set title ' '; $KEYPLOT '$PLOTDIR/images.weird' w points pt 5 ps 1.5 lc 4 t 'other'"
			JUSTPLOTTED=1; fi
	else
		PLOTCOMMAND="$PLOTCOMMAND '$PLOTDIR/imgs.dat' w points pt $PTTYPE ps $PTSIZE lc 8 t 'images'"
		KEYPLOT="set title ' '; $KEYPLOT '$PLOTDIR/imgs.dat' w points pt 5 ps 1.5 lc 8 t 'images'"
	fi
	if [[ $TERM != "" ]]; then
		if [[ $KEY != -1 ]]; then
			PLOTLINE="$SETTERM\nset multiplot\nunset key\n$PLOTCOMMAND\nset key samplen 2\nunset tics\nunset border\nunset xlabel\nunset ylabel\n$KEYPLOT"
		else
			PLOTLINE="$SETTERM\nset multiplot\nunset key\nset key off\n$PLOTCOMMAND\nunset tics\nunset border\nunset xlabel\nunset ylabel\n$KEYPLOT"
		fi
	else
		PLOTLINE="$SETTERM\n$PLOTCOMMAND"
	fi
elif [[ $COMMAND == "sources" ]]
then
	PTSIZE=`echo "$PTSIZE*0.3" | bc -l`
	PLOTCOMMAND="plot $RANGE '$PLOTDIR/crit.dat' using 3:4 w lines lw $LINEWIDTH lc 0 t 'caustics'"
	KEYPLOT="set title ' '\nplot [][1e12:2e12] '$PLOTDIR/crit.dat' using 3:4 w lines lw $LINEWIDTH lc 0 t 'caustics'"

	if [[ $SHOWMULTS == 1 ]]; then
		if [[ `head -1 sources.singles` != "" ]]; then PLOTCOMMAND="$PLOTCOMMAND, '$PLOTDIR/sources.singles' w points pt $PTTYPE ps $PTSIZE lc 2 t '1 image'"
			KEYPLOT="set title ' '; $KEYPLOT, '$PLOTDIR/sources.singles' w points pt 5 ps 1.5 lc 2 t '1 image'"; fi
		if [[ `head -1 sources.doubles` != "" ]]; then PLOTCOMMAND="$PLOTCOMMAND, '$PLOTDIR/sources.doubles' w points pt $PTTYPE ps $PTSIZE lc 3 t '3 images'"
			KEYPLOT="set title ' '; $KEYPLOT, '$PLOTDIR/sources.doubles' w points pt 5 ps 1.5 lc 3 t '3 images'"; fi
		if [[ `head -1 sources.quads` != "" ]]; then PLOTCOMMAND="$PLOTCOMMAND, '$PLOTDIR/sources.quads' w points pt $PTTYPE ps $PTSIZE lc 1 t '5 images'"
			KEYPLOT="set title ' '; $KEYPLOT, '$PLOTDIR/sources.quads' w points pt 5 ps 1.5 lc 1 t '5 images'"; fi
		if [[ `head -1 sources.cusps` != "" ]]; then PLOTCOMMAND="$PLOTCOMMAND, '$PLOTDIR/sources.cusps' w points pt $PTTYPE ps $PTSIZE lc 5 t 'naked cusp'"
			KEYPLOT="set title ' '; $KEYPLOT, '$PLOTDIR/sources.cusps' w points pt 5 ps 1.5 lc 5 t 'naked cusp'"; fi
		if [[ `head -1 sources.weird` != "" ]]; then PLOTCOMMAND="$PLOTCOMMAND, '$PLOTDIR/sources.weird' w points pt $PTTYPE ps $PTSIZE lc 4 t 'other'"
			KEYPLOT="set title ' '; $KEYPLOT, '$PLOTDIR/sources.weird' w points pt 5 ps 1.5 lc 4 t 'other'"; fi
	else
		PLOTCOMMAND="$PLOTCOMMAND, '$PLOTDIR/src.dat' w points pt $PTTYPE ps $PTSIZE lc 8 t 'source pts'"
		KEYPLOT="set title ' '; $KEYPLOT, '$PLOTDIR/src.dat' w points pt 5 ps 1.5 lc 8 t 'source pts'"
	fi
	if [[ $TERM != "" ]]; then
		if [[ $KEY != -1 ]]; then
			PLOTLINE="$SETTERM\nset multiplot\nunset key\n$PLOTCOMMAND\nset key samplen 2\nunset tics\nunset border\nunset xlabel\nunset ylabel\n$KEYPLOT"
		else
			PLOTLINE="$SETTERM\nset multiplot\nunset key\nset key off\n$PLOTCOMMAND\nunset tics\nunset border\nunset xlabel\nunset ylabel\n$KEYPLOT"
		fi
	else
		PLOTLINE="$SETTERM\n$PLOTCOMMAND"
	fi
elif [[ $COMMAND == "grid" ]]
then
	PLOTCOMMAND="plot $RANGE '$PLOTDIR/xgrid.dat' w lines lc 1 lt 1 t 'grid', '$PLOTDIR/crit.dat' w lines lw $LINEWIDTH lc 0 lt 1 t 'critical curves'"
	KEYPLOT="set title ' '\nplot [][1e12:2e12] '$PLOTDIR/xgrid.dat' w lines lc 1 lt 1 t 'grid', '$PLOTDIR/crit.dat' w lines lw $LINEWIDTH lc 0 lt 1 t 'critical curves'"

	#PLOTCOMMAND="plot $RANGE '$PLOTDIR/crit.dat' w lines lw $LINEWIDTH lc 0 t 'critical curves', '$PLOTDIR/xgrid.dat' w lines lc 1 t 'grid'"
	if [[ $TERM != "" ]]; then
		#KEYPLOT="set title ' '; plot [][1e12:2e12] '$PLOTDIR/crit.dat' w lines lw $LINEWIDTH lc 0 t 'critical curves', '$PLOTDIR/xgrid.dat' w lines lc 1 t 'grid'"
		if [[ $KEY != -1 ]]; then
			PLOTLINE="$SETTERM\nset multiplot\nunset key\n$PLOTCOMMAND\nset key samplen 2\nunset tics\nunset border\nunset xlabel\nunset ylabel\n$KEYPLOT"
		else
			PLOTLINE="$SETTERM\nset multiplot\nunset key\nset key off\n$PLOTCOMMAND\nunset tics\nunset border\nunset xlabel\nunset ylabel\n$KEYPLOT"
		fi
	else
		PLOTLINE="$SETTERM\n$PLOTCOMMAND"
	fi
elif [[ $COMMAND == "shearfield" ]]
then
	PLOTCOMMAND="plot $RANGE '$PLOTDIR/crit.dat' w lines lw $LINEWIDTH lc 0 t 'critical curves', '$PLOTDIR/shearfield.dat' u 1:2 w lines lw $LINEWIDTH lc 2 t 'shear data', '$PLOTDIR/shearfield.dat' u 3:4 w lines lw $LINEWIDTH lc 1 t 'model shear'"
	KEYPLOT="set title ' '\nplot [][1e12:2e12] '$PLOTDIR/crit.dat' w lines lw $LINEWIDTH lc 0 t 'critical curves', '$PLOTDIR/shearfield.dat' u 1:2 w lines lw $LINEWIDTH lc 2 t 'shear data', '$PLOTDIR/shearfield.dat' u 3:4 w lines lw $LINEWIDTH lc 1 t 'model shear'"
	if [[ $TERM != "" ]]; then
		if [[ $KEY != -1 ]]; then
			PLOTLINE="$SETTERM\nset multiplot\nunset key\n$PLOTCOMMAND\nset key samplen 2\nunset tics\nunset border\nunset xlabel\nunset ylabel\n$KEYPLOT"
		else
			PLOTLINE="$SETTERM\nset multiplot\nunset key\nset key off\n$PLOTCOMMAND\nunset tics\nunset border\nunset xlabel\nunset ylabel\n$KEYPLOT"
		fi
	else
		PLOTLINE="$SETTERM\n$PLOTCOMMAND"
	fi
elif [[ $COMMAND == "shearfield_nocc" ]]
then
	PLOTCOMMAND="plot $RANGE '$PLOTDIR/shearfield.dat' u 1:2 w lines lw $LINEWIDTH lc 2 t 'shear data', '$PLOTDIR/shearfield.dat' u 3:4 w lines lw $LINEWIDTH lc 1 t 'model shear'"
	KEYPLOT="set title ' '\nplot [][1e12:2e12] '$PLOTDIR/shearfield.dat' u 1:2 w lines lw $LINEWIDTH lc 2 t 'shear data', '$PLOTDIR/shearfield.dat' u 3:4 w lines lw $LINEWIDTH lc 1 t 'model shear'"
	if [[ $TERM != "" ]]; then
		if [[ $KEY != -1 ]]; then
			PLOTLINE="$SETTERM\nset multiplot\nunset key\n$PLOTCOMMAND\nset key samplen 2\nunset tics\nunset border\nunset xlabel\nunset ylabel\n$KEYPLOT"
		else
			PLOTLINE="$SETTERM\nset multiplot\nunset key\nset key off\n$PLOTCOMMAND\nunset tics\nunset border\nunset xlabel\nunset ylabel\n$KEYPLOT"
		fi
	else
		PLOTLINE="$SETTERM\n$PLOTCOMMAND"
	fi
elif [[ $COMMAND == "psfimg" ]]
then
	set -- $(head -2 $PLOTDIR/psfimg.x && head -2 $PLOTDIR/psfimg.y)
	DX=`bc <<< "scale=15; $2-($1)"`
	X0=`bc <<< "scale=15; $1+0.5*$DX"`
	DY=`bc <<< "scale=15; $4-($3)"`
	Y0=`bc <<< "scale=15; $3+0.5*$DY"`

	PLOTCOMMAND="set logscale cb; set format cb '10^{%T}'; set xrange [:] noextend; set yrange [:] noextend; plot $RANGE '$PLOTDIR/psfimg.dat' u ($DX*\$1+$X0):($DY*\$2+$Y0):3 matrix w image"
	PLOTLINE="unset key\n$SETTERM\n$PLOTCOMMAND"
elif [[ $COMMAND == "imgpixel" ]]
then
	set -- $(head -2 $PLOTDIR/img_pixel.x && head -2 $PLOTDIR/img_pixel.y)
	DX=`bc <<< "scale=15; $2-($1)"`
	X0=`bc <<< "scale=15; $1+0.5*$DX"`
	DY=`bc <<< "scale=15; $4-($3)"`
	Y0=`bc <<< "scale=15; $3+0.5*$DY"`

	#PLOTCOMMAND="plot $RANGE '$PLOTDIR/img_pixel.dat' u ($DX*\$1+$X0):($DY*\$2+$Y0):3 matrix w image, '$PLOTDIR/crit.dat' w lines lw $LINEWIDTH lc 0 t 'critical curves', 'randpts' w points pt 6, 'pts.dat' ps 0.5 pt 1 lc 5"
	#PLOTCOMMAND="plot $RANGE '$PLOTDIR/img_pixel.dat' u ($DX*\$1+$X0):($DY*\$2+$Y0):3 matrix w image, '$PLOTDIR/crit.dat' w lines lw $LINEWIDTH lc 0 t 'critical curves', 'pts.dat' ps 0.5 pt 1 lc 5"
	PLOTCOMMAND="plot $RANGE '$PLOTDIR/img_pixel.dat' u ($DX*\$1+$X0):($DY*\$2+$Y0):3 matrix w image, '$PLOTDIR/crit.dat' w lines lw $LINEWIDTH lc 0 t 'critical curves'"
	PLOTLINE="unset key\n$SETTERM\n$PLOTCOMMAND"
elif [[ $COMMAND == "imgpixel_comp" ]]
then
	set -- $(head -2 $PLOTDIR/img_pixel.x && head -2 $PLOTDIR/img_pixel.y)
	DX=`bc <<< "scale=15; $2-($1)"`
	X0=`bc <<< "scale=15; $1+0.5*$DX"`
	DY=`bc <<< "scale=15; $4-($3)"`
	Y0=`bc <<< "scale=15; $3+0.5*$DY"`

	PLOTCOMMAND="plot $RANGE '$PLOTDIR/img_pixel.dat' u ($DX*\$1+$X0):($DY*\$2+$Y0):3 matrix w image, '$PLOTDIR/crit.dat' w lines lw $LINEWIDTH lc 0 t 'critical curves', '$PLOTDIR/crit0.dat' w lines lw $LINEWIDTH lc 1 lt 2 t 'critical curves (reference)'"

	PLOTLINE="unset key\n$SETTERM\n$PLOTCOMMAND"
elif [[ $COMMAND == "srcpixel" ]]
then
	set -- $(head -2 $PLOTDIR/src_pixel.x && head -2 $PLOTDIR/src_pixel.y)
	DX=`bc <<< "scale=15; $2-($1)"`
	X0=`bc <<< "scale=15; $1+0.5*$DX"`
	DY=`bc <<< "scale=15; $4-($3)"`
	Y0=`bc <<< "scale=15; $3+0.5*$DY"`

	PLOTCOMMAND="plot $RANGE '$PLOTDIR/src_pixel.dat' u ($DX*\$1+$X0):($DY*\$2+$Y0):3 matrix w image, '$PLOTDIR/crit.dat' using 3:4 w lines lw $LINEWIDTH lc 0 t 'caustics'"
	PLOTLINE="unset key\n$SETTERM\n$PLOTCOMMAND"
elif [[ $COMMAND == "srcpixel_delaunay" ]]
then
	set -- $(head -2 $PLOTDIR/src_pixel.x && head -2 $PLOTDIR/src_pixel.y)
	DX=`bc <<< "scale=15; $2-($1)"`
	X0=`bc <<< "scale=15; $1+0.5*$DX"`
	DY=`bc <<< "scale=15; $4-($3)"`
	Y0=`bc <<< "scale=15; $3+0.5*$DY"`

	PLOTCOMMAND="plot $RANGE '$PLOTDIR/src_pixel.dat' u ($DX*\$1+$X0):($DY*\$2+$Y0):3 matrix w image, '$PLOTDIR/crit.dat' using 3:4 w lines lw $LINEWIDTH lc 0 t 'caustics', '$PLOTDIR/src_pixel_srcpts.dat' w dots lc 8 t 'delaunay pixels'"
	#PLOTCOMMAND="plot $RANGE '$PLOTDIR/src_pixel.dat' u ($DX*\$1+$X0):($DY*\$2+$Y0):3 matrix w image, '$PLOTDIR/crit.dat' using 3:4 w lines lw $LINEWIDTH lc 0 t 'caustics', '$PLOTDIR/upper_srcpts.dat' w points pt 7 ps 0.3 lc 4 t 'delaunay pixels (y>0.4)', '$PLOTDIR/lower_srcpts.dat' w points pt 7 ps 0.3 lc 8 t 'delaunay pixels (y<0.4)'"
	#PLOTCOMMAND="plot $RANGE '$PLOTDIR/src_pixel.dat' u ($DX*\$1+$X0):($DY*\$2+$Y0):3 matrix w image, '$PLOTDIR/crit.dat' using 3:4 w lines lw $LINEWIDTH lc 0 t 'caustics', '$PLOTDIR/src_pixel_srcpts.dat' w dots lc 8 t 'delaunay pixels', 'centkm.dat' w dots pt 1 lc 15 t 'centroids'"
	PLOTLINE="unset key\n$SETTERM\n$PLOTCOMMAND"
elif [[ $COMMAND == "srcpixel_delaunay_srcpts_plural" ]]
then
	set -- $(head -2 $PLOTDIR/src_pixel.x && head -2 $PLOTDIR/src_pixel.y)
	DX=`bc <<< "scale=15; $2-($1)"`
	X0=`bc <<< "scale=15; $1+0.5*$DX"`
	DY=`bc <<< "scale=15; $4-($3)"`
	Y0=`bc <<< "scale=15; $3+0.5*$DY"`

	PLOTCOMMAND="plot $RANGE '$PLOTDIR/src_pixel.dat' u ($DX*\$1+$X0):($DY*\$2+$Y0):3 matrix w image, '$PLOTDIR/crit.dat' using 3:4 w lines lw $LINEWIDTH lc 11 t 'caustics', '$PLOTDIR/src_pixel_srcpts.dat' w dots lc 8 t 'delaunay pixels'"
	PLOTCOMMAND="$PLOTCOMMAND, '$PLOTDIR/src.dat' w points pt $PTTYPE ps $PTSIZE lc 8 t 'source pts'"

	#PLOTCOMMAND="plot $RANGE '$PLOTDIR/src_pixel.dat' u ($DX*\$1+$X0):($DY*\$2+$Y0):3 matrix w image, '$PLOTDIR/crit.dat' using 3:4 w lines lw $LINEWIDTH lc 0 t 'caustics', '$PLOTDIR/upper_srcpts2.dat' w points pt 7 ps 0.3 lc 4 t 'delaunay pixels (y>0.4)', '$PLOTDIR/lower_srcpts2.dat' w points pt 7 ps 0.3 lc 8 t 'delaunay pixels (y<0.3)'"
	#PLOTCOMMAND="plot $RANGE '$PLOTDIR/src_pixel.dat' u ($DX*\$1+$X0):($DY*\$2+$Y0):3 matrix w image, '$PLOTDIR/crit.dat' using 3:4 w lines lw $LINEWIDTH lc 0 t 'caustics', '$PLOTDIR/src_pixel_srcpts.dat' w dots lc 8 t 'delaunay pixels', 'centkm.dat' w dots pt 1 lc 15 t 'centroids'"
	#PLOTCOMMAND="$PLOTCOMMAND, '$PLOTDIR/src.dat' w points pt $PTTYPE ps $PTSIZE lc 8 t 'image pts', '$PLOTDIR/upper_srcpts.dat' w points pt 7 ps 0.3 lc 4 t 'delaunay pixels (y>0.4)', '$PLOTDIR/lower_srcpts.dat' w points pt 7 ps 0.3 lc 8 t 'delaunay pixels (y<0.4)'"
	PLOTLINE="unset key\n$SETTERM\n$PLOTCOMMAND"
elif [[ $COMMAND == "potpixel" ]]
then
	set -- $(head -2 $PLOTDIR/pot_pixel.x && head -2 $PLOTDIR/pot_pixel.y)
	DX=`bc <<< "scale=15; $2-($1)"`
	X0=`bc <<< "scale=15; $1+0.5*$DX"`
	DY=`bc <<< "scale=15; $4-($3)"`
	Y0=`bc <<< "scale=15; $3+0.5*$DY"`

	PLOTCOMMAND="plot $RANGE '$PLOTDIR/pot_pixel.dat' u ($DX*\$1+$X0):($DY*\$2+$Y0):3 matrix w image, '$PLOTDIR/crit.dat' w lines lw $LINEWIDTH lc 0 t 'critical curves'"
	PLOTLINE="unset key\n$SETTERM\n$PLOTCOMMAND"
elif [[ $COMMAND == "potpixel_nocc" ]]
then
	set -- $(head -2 $PLOTDIR/pot_pixel.x && head -2 $PLOTDIR/pot_pixel.y)
	DX=`bc <<< "scale=15; $2-($1)"`
	X0=`bc <<< "scale=15; $1+0.5*$DX"`
	DY=`bc <<< "scale=15; $4-($3)"`
	Y0=`bc <<< "scale=15; $3+0.5*$DY"`

	PLOTCOMMAND="plot $RANGE '$PLOTDIR/pot_pixel.dat' u ($DX*\$1+$X0):($DY*\$2+$Y0):3 matrix w image"
	PLOTLINE="unset key\n$SETTERM\n$PLOTCOMMAND"
elif [[ $COMMAND == "imgpixel_nocc" ]]
then
	set -- $(head -2 $PLOTDIR/img_pixel.x && head -2 $PLOTDIR/img_pixel.y)
	DX=`bc <<< "scale=15; $2-($1)"`
	X0=`bc <<< "scale=15; $1+0.5*$DX"`
	DY=`bc <<< "scale=15; $4-($3)"`
	Y0=`bc <<< "scale=15; $3+0.5*$DY"`

	if [[ $INCLUDE_CONTOURS == 1 ]]; then
		MIN=`awk 'BEGIN{min=1e30;max=-1e30}{for (i=1; i <= NF; i++) { if ($i > max) max = $i; if ($i < min) min = $i}}END{printf "%.6f", min}' <$PLOTDIR/img_pixel.dat`
		MAX=`awk 'BEGIN{min=1e30;max=-1e30}{for (i=1; i <= NF; i++) { if ($i > max) max = $i; if ($i < min) min = $i}}END{printf "%.6f", max}' <$PLOTDIR/img_pixel.dat`
		STEP=`bc <<< "scale=15; (($MAX)-($MIN))/$NCONT"`
		STEPSHORT=`bc <<< "scale=3; (($MAX)-($MIN))/$NCONT"`
		C0=`bc <<< "scale=15; $MIN+3*$STEP"`
		Cf=`bc <<< "scale=15; $MAX-$STEP"`

		PLOTCOMMAND="set contour\nunset surface\nset cntrparam cubicspline levels incr $C0,$STEP,$Cf\nset view map\nset dgrid3d 100,100 qnorm 4\nset table 'contour.txt'\nsplot '$PLOTDIR/img_pixel.dat' u ($DX*\$1+$X0):($DY*\$2+$Y0):3 matrix\nunset table"
		PLOTCOMMAND="$PLOTCOMMAND\nunset contour\nset surface\nset table 'dgrid.txt'\nsplot '$PLOTDIR/img_pixel.dat' u ($DX*\$1+$X0):($DY*\$2+$Y0):3 matrix\nunset table"
		PLOTCOMMAND="$PLOTCOMMAND\nreset\nset palette defined (0 '#000090', 1 '#000fff', 2 '#0090ff', 3 '#0fffee', 4 '#90ff70', 5 '#ffee00', 6 '#ff7000', 7 '#ee0000', 8 '#7f0000')\nset grid"
		PLOTCOMMAND="$PLOTCOMMAND\nset title '$TITLE'\n$CBCOMMAND\n$SQAXES\nplot $RANGE '$PLOTDIR/img_pixel.dat' u ($DX*\$1+$X0):($DY*\$2+$Y0):3 matrix w image t '', 'contour.txt' w l lc rgb 'black' lw $LINEWIDTH t 'step=$STEPSHORT'"
		PLOTLINE="unset key\n$SETTERM\n$PLOTCOMMAND"
	else
		#PLOTCOMMAND="plot $RANGE '$PLOTDIR/img_pixel.dat' u ($DX*\$1+$X0):($DY*\$2+$Y0):3 matrix w image"
		PLOTCOMMAND="plot $RANGE '$PLOTDIR/img_pixel.dat' u ($DX*\$1+$X0):($DY*\$2+$Y0):3 matrix w image, '$PLOTDIR/img_pixels_upper.dat' w points pt 7 ps 0.3 lc 4 t 'delaunay pixels (y>0.4)', '$PLOTDIR/img_pixels_lower.dat' w points pt 7 ps 0.3 lc 8 t 'delaunay pixels (y<0.3)'"
		PLOTLINE="unset key\n$SETTERM\n$PLOTCOMMAND"
	fi
elif [[ $COMMAND == "datapixel" ]]
then
	set -- $(head -2 $PLOTDIR/data_pixel.x && head -2 $PLOTDIR/data_pixel.y)
	DX=`bc <<< "scale=15; $2-($1)"`
	X0=`bc <<< "scale=15; $1+0.5*$DX"`
	DY=`bc <<< "scale=15; $4-($3)"`
	Y0=`bc <<< "scale=15; $3+0.5*$DY"`

	if [[ $INCLUDE_CONTOURS == 1 ]]; then
		MIN=`awk 'BEGIN{min=1e30;max=-1e30}{for (i=1; i <= NF; i++) { if ($i > max) max = $i; if ($i < min) min = $i}}END{printf "%.6f", min}' <$PLOTDIR/data_pixel.dat`
		MAX=`awk 'BEGIN{min=1e30;max=-1e30}{for (i=1; i <= NF; i++) { if ($i > max) max = $i; if ($i < min) min = $i}}END{printf "%.6f", max}' <$PLOTDIR/data_pixel.dat`
		STEP=`bc <<< "scale=15; (($MAX)-($MIN))/$NCONT"`
		STEPSHORT=`bc <<< "scale=3; (($MAX)-($MIN))/$NCONT"`
		C0=`bc <<< "scale=15; $MIN+3*$STEP"`
		Cf=`bc <<< "scale=15; $MAX-$STEP"`

		PLOTCOMMAND="set contour\nunset surface\nset cntrparam cubicspline levels incr $C0,$STEP,$Cf\nset view map\nset dgrid3d 100,100 qnorm 4\nset table 'contour.txt'\nsplot '$PLOTDIR/data_pixel.dat' u ($DX*\$1+$X0):($DY*\$2+$Y0):3 matrix\nunset table"
		PLOTCOMMAND="$PLOTCOMMAND\nunset contour\nset surface\nset table 'dgrid.txt'\nsplot '$PLOTDIR/data_pixel.dat' u ($DX*\$1+$X0):($DY*\$2+$Y0):3 matrix\nunset table"
		PLOTCOMMAND="$PLOTCOMMAND\nreset\nset palette defined (0 '#000090', 1 '#000fff', 2 '#0090ff', 3 '#0fffee', 4 '#90ff70', 5 '#ffee00', 6 '#ff7000', 7 '#ee0000', 8 '#7f0000')\nset grid"
		PLOTCOMMAND="$PLOTCOMMAND\nset title '$TITLE'\n$CBCOMMAND\n$SQAXES\nplot $RANGE '$PLOTDIR/data_pixel.dat' u ($DX*\$1+$X0):($DY*\$2+$Y0):3 matrix w image t '', 'contour.txt' w l lc rgb 'black' lw $LINEWIDTH t 'step=$STEPSHORT'"
		PLOTLINE="unset key\n$SETTERM\n$PLOTCOMMAND"
	else
		#PLOTCOMMAND="plot $RANGE '$PLOTDIR/data_pixel.dat' u ($DX*\$1+$X0):($DY*\$2+$Y0):3 matrix w image, 'annulus.dat' w lines, 'sectors.dat' w dots lc 0"
		PLOTCOMMAND="plot $RANGE '$PLOTDIR/data_pixel.dat' u ($DX*\$1+$X0):($DY*\$2+$Y0):3 matrix w image"
		PLOTLINE="unset key\n$SETTERM\n$PLOTCOMMAND"
	fi
elif [[ $COMMAND == "datapixel_ellfit" ]]
then
	set -- $(head -2 $PLOTDIR/data_pixel.x && head -2 $PLOTDIR/data_pixel.y)
	DX=`bc <<< "scale=15; $2-($1)"`
	X0=`bc <<< "scale=15; $1+0.5*$DX"`
	DY=`bc <<< "scale=15; $4-($3)"`
	Y0=`bc <<< "scale=15; $3+0.5*$DY"`

	if [[ $INCLUDE_CONTOURS == 1 ]]; then
		MIN=`awk 'BEGIN{min=1e30;max=-1e30}{for (i=1; i <= NF; i++) { if ($i > max) max = $i; if ($i < min) min = $i}}END{printf "%.6f", min}' <$PLOTDIR/data_pixel.dat`
		MAX=`awk 'BEGIN{min=1e30;max=-1e30}{for (i=1; i <= NF; i++) { if ($i > max) max = $i; if ($i < min) min = $i}}END{printf "%.6f", max}' <$PLOTDIR/data_pixel.dat`
		STEP=`bc <<< "scale=15; (($MAX)-($MIN))/$NCONT"`
		STEPSHORT=`bc <<< "scale=3; (($MAX)-($MIN))/$NCONT"`
		C0=`bc <<< "scale=15; $MIN+3*$STEP"`
		Cf=`bc <<< "scale=15; $MAX-$STEP"`

		PLOTCOMMAND="set contour\nunset surface\nset cntrparam cubicspline levels incr $C0,$STEP,$Cf\nset view map\nset dgrid3d 100,100 qnorm 4\nset table 'contour.txt'\nsplot '$PLOTDIR/data_pixel.dat' u ($DX*\$1+$X0):($DY*\$2+$Y0):3 matrix\nunset table"
		PLOTCOMMAND="$PLOTCOMMAND\nunset contour\nset surface\nset table 'dgrid.txt'\nsplot '$PLOTDIR/data_pixel.dat' u ($DX*\$1+$X0):($DY*\$2+$Y0):3 matrix\nunset table"
		PLOTCOMMAND="$PLOTCOMMAND\nreset\nset palette defined (0 '#000090', 1 '#000fff', 2 '#0090ff', 3 '#0fffee', 4 '#90ff70', 5 '#ffee00', 6 '#ff7000', 7 '#ee0000', 8 '#7f0000')\nset grid"
		PLOTCOMMAND="$PLOTCOMMAND\nset title '$TITLE'\n$CBCOMMAND\n$SQAXES\nplot $RANGE '$PLOTDIR/data_pixel.dat' u ($DX*\$1+$X0):($DY*\$2+$Y0):3 matrix w image t '', 'contour.txt' w l lc rgb 'black' lw $LINEWIDTH t 'step=$STEPSHORT', 'ellfit.dat' w points lc 0 t 'isophote fit'"
		PLOTLINE="unset key\n$SETTERM\n$PLOTCOMMAND"
	else
		#PLOTCOMMAND="plot $RANGE '$PLOTDIR/data_pixel.dat' u ($DX*\$1+$X0):($DY*\$2+$Y0):3 matrix w image, 'ellfit.dat' w lines t 'isophote fit', 'ellfit0.dat' w lines t 'initial guess'"
		PLOTCOMMAND="plot $RANGE '$PLOTDIR/data_pixel.dat' u ($DX*\$1+$X0):($DY*\$2+$Y0):3 matrix w image, 'ellfit.dat' w lines lc 0 t 'isophote fit'"
		PLOTLINE="unset key\n$SETTERM\n$PLOTCOMMAND"
	fi
elif [[ $COMMAND == "srcpixel_nocc" ]]
then
	set -- $(head -2 $PLOTDIR/src_pixel.x && head -2 $PLOTDIR/src_pixel.y)
	DX=`bc <<< "scale=15; $2-($1)"`
	X0=`bc <<< "scale=15; $1+0.5*$DX"`
	DY=`bc <<< "scale=15; $4-($3)"`
	Y0=`bc <<< "scale=15; $3+0.5*$DY"`

	PLOTCOMMAND="plot $RANGE '$PLOTDIR/src_pixel.dat' u ($DX*\$1+$X0):($DY*\$2+$Y0):3 matrix w image"
	PLOTLINE="unset key\n$SETTERM\n$PLOTCOMMAND"
elif [[ $COMMAND == "srcpixel_delaunay_nocc" ]]
then
	set -- $(head -2 $PLOTDIR/src_pixel.x && head -2 $PLOTDIR/src_pixel.y)
	DX=`bc <<< "scale=15; $2-($1)"`
	X0=`bc <<< "scale=15; $1+0.5*$DX"`
	DY=`bc <<< "scale=15; $4-($3)"`
	Y0=`bc <<< "scale=15; $3+0.5*$DY"`

	#PLOTCOMMAND="plot $RANGE '$PLOTDIR/src_pixel.dat' u ($DX*\$1+$X0):($DY*\$2+$Y0):3 matrix w image, '$PLOTDIR/src_pixel_srcpts.dat' w dots lc 8 t 'delaunay pixels'"
	PLOTCOMMAND="plot $RANGE '$PLOTDIR/src_pixel.dat' u ($DX*\$1+$X0):($DY*\$2+$Y0):3 matrix w image"
	PLOTLINE="unset key\n$SETTERM\n$PLOTCOMMAND"
elif [[ $COMMAND == "srcpixel_delaunay_srcpts_plural_nocc" ]]
then
	set -- $(head -2 $PLOTDIR/src_pixel.x && head -2 $PLOTDIR/src_pixel.y)
	DX=`bc <<< "scale=15; $2-($1)"`
	X0=`bc <<< "scale=15; $1+0.5*$DX"`
	DY=`bc <<< "scale=15; $4-($3)"`
	Y0=`bc <<< "scale=15; $3+0.5*$DY"`

	#PLOTCOMMAND="plot $RANGE '$PLOTDIR/src_pixel.dat' u ($DX*\$1+$X0):($DY*\$2+$Y0):3 matrix w image, '$PLOTDIR/src_pixel_srcpts.dat' w dots lc 8 t 'delaunay pixels'"
	PLOTCOMMAND="plot $RANGE '$PLOTDIR/src_pixel.dat' u ($DX*\$1+$X0):($DY*\$2+$Y0):3 matrix w image"
	PLOTCOMMAND="$PLOTCOMMAND, '$PLOTDIR/src.dat' w points pt $PTTYPE ps $PTSIZE lc 8 t 'source pts'"
	PLOTLINE="unset key\n$SETTERM\n$PLOTCOMMAND"
elif [[ $COMMAND == "imgpixel_imgpts" ]]
then
	set -- $(head -2 $PLOTDIR/img_pixel.x && head -2 $PLOTDIR/img_pixel.y)
	DX=`bc <<< "scale=15; $2-($1)"`
	X0=`bc <<< "scale=15; $1+0.5*$DX"`
	DY=`bc <<< "scale=15; $4-($3)"`
	Y0=`bc <<< "scale=15; $3+0.5*$DY"`

	PLOTCOMMAND="plot $RANGE '$PLOTDIR/img_pixel.dat' u ($DX*\$1+$X0):($DY*\$2+$Y0):3 matrix w image, '$PLOTDIR/crit.dat' w lines lw $LINEWIDTH lc 0 t 'critical curves', '$PLOTDIR/imgs.dat' w points lc 0 pt $PTTYPE ps $PTSIZE t 'images'"
	#PLOTLINE="unset key; $SETTERM; $PLOTCOMMAND"

	KEYPLOT="set title ' '\nplot [][1e12:2e12] '$PLOTDIR/crit.dat' w lines lw $LINEWIDTH lc 0 t 'critical curves', '$PLOTDIR/imgs.dat' w points pt $PTTYPE ps $PTSIZE lc 1 t 'images'"
	if [[ $TERM != "" ]]; then
		if [[ $KEY != -1 ]]; then
			PLOTLINE="$SETTERM\nset multiplot\nunset key\n$PLOTCOMMAND\nset key samplen 2\nunset tics\nunset border\nunset xlabel\nunset ylabel\n$KEYPLOT"
		else
			PLOTLINE="$SETTERM\nset multiplot\nunset key\nset key off\n$PLOTCOMMAND\nunset tics\nunset border\nunset xlabel\nunset ylabel\n$KEYPLOT"
		fi
	else
		PLOTLINE="unset key\n$SETTERM\n$PLOTCOMMAND"
	fi

elif [[ $COMMAND == "imgpixel_imgpts_nocc" ]]
then
	set -- $(head -2 $PLOTDIR/img_pixel.x && head -2 $PLOTDIR/img_pixel.y)
	DX=`bc <<< "scale=15; $2-($1)"`
	X0=`bc <<< "scale=15; $1+0.5*$DX"`
	DY=`bc <<< "scale=15; $4-($3)"`
	Y0=`bc <<< "scale=15; $3+0.5*$DY"`

	PLOTCOMMAND="plot $RANGE '$PLOTDIR/img_pixel.dat' u ($DX*\$1+$X0):($DY*\$2+$Y0):3 matrix w image, '$PLOTDIR/imgs.dat' w points lc 0 pt $PTTYPE ps $PTSIZE t 'images'"
	#PLOTCOMMAND="plot $RANGE '$PLOTDIR/img_pixel.dat' u ($DX*\$1+$X0):($DY*\$2+$Y0):3 matrix w image, '$PLOTDIR/imgs.dat' w points lc 0 pt $PTTYPE ps $PTSIZE t 'images', '$PLOTDIR/img_pixels_upper.dat' w points pt 7 ps 0.3 lc 4 t 'delaunay pixels (y>0.4)', '$PLOTDIR/img_pixels_lower.dat' w points pt 7 ps 0.3 lc 8 t 'delaunay pixels (y<0.3)'"
	#PLOTLINE="unset key; $SETTERM; $PLOTCOMMAND"

	KEYPLOT="set title ' '\nplot [][1e12:2e12] '$PLOTDIR/imgs.dat' w points pt $PTTYPE ps $PTSIZE lc 1 t 'images'"
	if [[ $TERM != "" ]]; then
		if [[ $KEY != -1 ]]; then
			PLOTLINE="$SETTERM\nset multiplot\nunset key\n$PLOTCOMMAND\nset key samplen 2\nunset tics\nunset border\nunset xlabel\nunset ylabel\n$KEYPLOT"
		else
			PLOTLINE="$SETTERM\nset multiplot\nunset key\nset key off\n$PLOTCOMMAND\nunset tics\nunset border\nunset xlabel\nunset ylabel\n$KEYPLOT"
		fi
	else
		PLOTLINE="unset key\n$SETTERM\n$PLOTCOMMAND"
	fi

elif [[ $COMMAND == "imgpixel_imgpts_plural" ]]
then
	set -- $(head -2 $PLOTDIR/img_pixel.x && head -2 $PLOTDIR/img_pixel.y)
	DX=`bc <<< "scale=15; $2-($1)"`
	X0=`bc <<< "scale=15; $1+0.5*$DX"`
	DY=`bc <<< "scale=15; $4-($3)"`
	Y0=`bc <<< "scale=15; $3+0.5*$DY"`

	PLOTCOMMAND="plot $RANGE '$PLOTDIR/img_pixel.dat' u ($DX*\$1+$X0):($DY*\$2+$Y0):3 matrix w image, '$PLOTDIR/crit.dat' w lines lw $LINEWIDTH lc 11 t 'critical curves'"
	KEYPLOT="set title ' '\nplot [][1e12:2e12] '$PLOTDIR/crit.dat' w lines lw $LINEWIDTH lc 11 t 'critical curves'"

	if [[ $SHOWMULTS == 1 ]]; then
		if [[ `head -1 $PLOTDIR/images.singles` != "" ]]; then PLOTCOMMAND="$PLOTCOMMAND, '$PLOTDIR/images.singles' w points pt $PTTYPE ps $PTSIZE lc 2 t '1 image'"
			KEYPLOT="set title ' '; $KEYPLOT, '$PLOTDIR/images.singles' w points pt 5 ps 1.5 lc 2 t '1 image'"; fi
		if [[ `head -1 $PLOTDIR/images.doubles` != "" ]]; then PLOTCOMMAND="$PLOTCOMMAND, '$PLOTDIR/images.doubles' w points pt $PTTYPE ps $PTSIZE lc 3 t '3 images'"
			KEYPLOT="set title ' '; $KEYPLOT, '$PLOTDIR/images.doubles' w points pt 5 ps 1.5 lc 3 t '3 images'"; fi
		if [[ `head -1 $PLOTDIR/images.quads` != "" ]]; then PLOTCOMMAND="$PLOTCOMMAND, '$PLOTDIR/images.quads' w points pt $PTTYPE ps $PTSIZE lc 1 t '5 images'"
			KEYPLOT="set title ' '; $KEYPLOT, '$PLOTDIR/images.quads' w points pt 5 ps 1.5 lc 1 t '5 images'"; fi
		if [[ `head -1 $PLOTDIR/images.cusps` != "" ]]; then PLOTCOMMAND="$PLOTCOMMAND, '$PLOTDIR/images.cusps' w points pt $PTTYPE ps $PTSIZE lc 5 t 'naked cusp'"
			KEYPLOT="set title ' '; $KEYPLOT, '$PLOTDIR/images.cusps' w points pt 5 ps 1.5 lc 5 t 'naked cusp'"; fi
		if [[ `head -1 $PLOTDIR/images.weird` != "" ]]; then PLOTCOMMAND="$PLOTCOMMAND, '$PLOTDIR/images.weird' w points pt $PTTYPE ps $PTSIZE lc 4 t 'other'"
			KEYPLOT="set title ' '; $KEYPLOT, '$PLOTDIR/images.weird' w points pt 5 ps 1.5 lc 4 t 'other'"; fi
	else
		PLOTCOMMAND="$PLOTCOMMAND, '$PLOTDIR/imgs.dat' w points pt $PTTYPE ps $PTSIZE lc 8 t 'image pts'"
		KEYPLOT="set title ' '; $KEYPLOT, '$PLOTDIR/imgs.dat' w points pt 5 ps 1.5 lc 8 t 'image pts'"
	fi

	#if [[ $TERM != "" ]]; then
		#if [[ $KEY != -1 ]]; then
			#PLOTLINE="$SETTERM\nset multiplot\nunset key\n$PLOTCOMMAND\nset key samplen 2\nunset tics\nunset border\nunset xlabel\nunset ylabel\n$KEYPLOT"
		#else
			#PLOTLINE="$SETTERM\nset multiplot\nunset key\nset key off\n$PLOTCOMMAND\nunset tics\nunset border\nunset xlabel\nunset ylabel\n$KEYPLOT"
		#fi
	#else
		PLOTLINE="unset key\n$SETTERM\n$PLOTCOMMAND"
	#fi
elif [[ $COMMAND == "imgpixel_imgpts_plural_nocc" ]]
then
	set -- $(head -2 $PLOTDIR/img_pixel.x && head -2 $PLOTDIR/img_pixel.y)
	DX=`bc <<< "scale=15; $2-($1)"`
	X0=`bc <<< "scale=15; $1+0.5*$DX"`
	DY=`bc <<< "scale=15; $4-($3)"`
	Y0=`bc <<< "scale=15; $3+0.5*$DY"`

	PLOTCOMMAND="plot $RANGE '$PLOTDIR/img_pixel.dat' u ($DX*\$1+$X0):($DY*\$2+$Y0):3 matrix w image"
	KEYPLOT="set title ' '\nplot [][1e12:2e12] "

	if [[ $SHOWMULTS == 1 ]]; then
		if [[ `head -1 $PLOTDIR/images.singles` != "" ]]; then PLOTCOMMAND="$PLOTCOMMAND, '$PLOTDIR/images.singles' w points pt $PTTYPE ps $PTSIZE lc 2 t '1 image'"
			KEYPLOT="set title ' '; $KEYPLOT, '$PLOTDIR/images.singles' w points pt 5 ps 1.5 lc 2 t '1 image'"; fi
		if [[ `head -1 $PLOTDIR/images.doubles` != "" ]]; then PLOTCOMMAND="$PLOTCOMMAND, '$PLOTDIR/images.doubles' w points pt $PTTYPE ps $PTSIZE lc 3 t '3 images'"
			KEYPLOT="set title ' '; $KEYPLOT, '$PLOTDIR/images.doubles' w points pt 5 ps 1.5 lc 3 t '3 images'"; fi
		if [[ `head -1 $PLOTDIR/images.quads` != "" ]]; then PLOTCOMMAND="$PLOTCOMMAND, '$PLOTDIR/images.quads' w points pt $PTTYPE ps $PTSIZE lc 1 t '5 images'"
			KEYPLOT="set title ' '; $KEYPLOT, '$PLOTDIR/images.quads' w points pt 5 ps 1.5 lc 1 t '5 images'"; fi
		if [[ `head -1 $PLOTDIR/images.cusps` != "" ]]; then PLOTCOMMAND="$PLOTCOMMAND, '$PLOTDIR/images.cusps' w points pt $PTTYPE ps $PTSIZE lc 5 t 'naked cusp'"
			KEYPLOT="set title ' '; $KEYPLOT, '$PLOTDIR/images.cusps' w points pt 5 ps 1.5 lc 5 t 'naked cusp'"; fi
		if [[ `head -1 $PLOTDIR/images.weird` != "" ]]; then PLOTCOMMAND="$PLOTCOMMAND, '$PLOTDIR/images.weird' w points pt $PTTYPE ps $PTSIZE lc 4 t 'other'"
			KEYPLOT="set title ' '; $KEYPLOT, '$PLOTDIR/images.weird' w points pt 5 ps 1.5 lc 4 t 'other'"; fi
	else
		PLOTCOMMAND="$PLOTCOMMAND, '$PLOTDIR/imgs.dat' w points pt $PTTYPE ps $PTSIZE lc 8 t 'image pts'"
		KEYPLOT="set title ' '; $KEYPLOT, '$PLOTDIR/imgs.dat' w points pt 5 ps 1.5 lc 8 t 'image pts'"
	fi
	PLOTLINE="unset key\n$SETTERM\n$PLOTCOMMAND"
elif [[ $COMMAND == "imgpixel_imgdat" ]]
then
	grep -v \" $PLOTDIR/imgdat.dat >$PLOTDIR/imgdat_notitles.dat
	set -- $(head -2 $PLOTDIR/img_pixel.x && head -2 $PLOTDIR/img_pixel.y)
	DX=`bc <<< "scale=15; $2-($1)"`
	X0=`bc <<< "scale=15; $1+0.5*$DX"`
	DY=`bc <<< "scale=15; $4-($3)"`
	Y0=`bc <<< "scale=15; $3+0.5*$DY"`

	#PLOTCOMMAND="plot $RANGE 'img_pixel.dat' u ($DX*\$1+$X0):($DY*\$2+$Y0):3 matrix w image, 'imgdat.dat' w points lc 0 pt $PTTYPE ps $PTSIZE t 'data'"
	#PLOTLINE="unset key; $SETTERM; $PLOTCOMMAND"
	#KEYPLOT="set title ' '; plot [][1e12:2e12] 'imgs.dat' w points pt $PTTYPE ps $PTSIZE lc 1 t 'images'"

	PLOTCOMMAND="stats '$PLOTDIR/imgdat_notitles.dat'; plot $RANGE '$PLOTDIR/img_pixel.dat' u ($DX*\$1+$X0):($DY*\$2+$Y0):3 matrix w image, for [IDX=1:STATS_blocks] '$PLOTDIR/imgdat.dat' index (IDX-1) u 1:2 w points pt IDX ps $PTSIZE lc 0 t columnheader(1)"
	KEYPLOT="set title ' '\nplot [][1e12:2e12] '$PLOTDIR/img_pixel.dat' u ($DX*\$1+$X0):($DY*\$2+$Y0):3 matrix w image, for [IDX=1:STATS_blocks] '$PLOTDIR/imgdat.dat' index (IDX-1) u 1:2 w points pt IDX ps $PTSIZE lc 3 t columnheader(1)"

	if [[ $TERM != "" ]]; then
		if [[ $KEY != -1 ]]; then
			PLOTLINE="$SETTERM\nset multiplot\nunset key\n$PLOTCOMMAND\nset key samplen 2\nunset tics\nunset border\nunset xlabel\nunset ylabel\n$KEYPLOT"
		else
			PLOTLINE="$SETTERM\nset multiplot\nunset key\nset key off\n$PLOTCOMMAND\nunset tics\nunset border\nunset xlabel\nunset ylabel\n$KEYPLOT"
		fi
	else
		PLOTLINE="unset key\n$SETTERM\n$PLOTCOMMAND"
	fi
elif [[ $COMMAND == "lensmap_kappalog" ]]
then
	set -- $(head -2 lensmap.x && head -2 lensmap.y)
	DX=`bc <<< "scale=15; $2-($1)"`
	X0=`bc <<< "scale=15; $1+0.5*$DX"`
	DY=`bc <<< "scale=15; $4-($3)"`
	Y0=`bc <<< "scale=15; $3+0.5*$DY"`
	set -- $(tail -1 lensmap.x && tail -1 lensmap.y)
	Xf=`bc <<< "scale=15; $1-0.5*$DX"`
	Yf=`bc <<< "scale=15; $2-0.5*$DY"`

	if [[ $INCLUDE_CONTOURS == 1 ]]; then
		MIN=`awk 'BEGIN{min=1e30;max=-1e30}{for (i=1; i <= NF; i++) { if ($i > max) max = $i; if ($i < min) min = $i}}END{printf "%.6f", min}' <lensmap.kappalog`
		MAX=`awk 'BEGIN{min=1e30;max=-1e30}{for (i=1; i <= NF; i++) { if ($i > max) max = $i; if ($i < min) min = $i}}END{printf "%.6f", max}' <lensmap.kappalog`
		STEP=`bc <<< "scale=15; (($MAX)-($MIN))/$NCONT"`
		STEPSHORT=`bc <<< "scale=3; (($MAX)-($MIN))/$NCONT"`
		C0=`bc <<< "scale=15; $MIN+3*$STEP"`
		Cf=`bc <<< "scale=15; $MAX-$STEP"`

		PLOTCOMMAND="set contour\nunset surface\nset cntrparam cubicspline levels incr $C0,$STEP,$Cf\nset view map\nset dgrid3d 100,100 qnorm 4\nset table 'contour.txt'\nsplot 'lensmap.kappalog' u ($DX*\$1+$X0):($DY*\$2+$Y0):3 matrix\nunset table"
		PLOTCOMMAND="$PLOTCOMMAND\nunset contour\nset surface\nset table 'dgrid.txt'\nsplot 'lensmap.kappalog' u ($DX*\$1+$X0):($DY*\$2+$Y0):3 matrix\nunset table"
		PLOTCOMMAND="$PLOTCOMMAND\nreset\nset palette defined (0 '#000090', 1 '#000fff', 2 '#0090ff', 3 '#0fffee', 4 '#90ff70', 5 '#ffee00', 6 '#ff7000', 7 '#ee0000', 8 '#7f0000')\nset grid"
		PLOTCOMMAND="$PLOTCOMMAND\nset title '$TITLE'\n$CBCOMMAND\n$SQAXES\nplot $RANGE 'lensmap.kappalog' u ($DX*\$1+$X0):($DY*\$2+$Y0):3 matrix w image t '', 'contour.txt' w l lc rgb 'black' lw $LINEWIDTH t 'step=$STEPSHORT'"
		PLOTLINE="unset key\n$SETTERM\n$PLOTCOMMAND"
	else

		PLOTCOMMAND="plot $RANGE 'lensmap.kappalog' u ($DX*\$1+$X0):($DY*\$2+$Y0):3 matrix w image t ''"
		PLOTLINE="unset key\n$SETTERM\n$PLOTCOMMAND"
	fi
elif [[ $COMMAND == "lensmap_potlog" ]]
then
	set -- $(head -2 lensmap.x && head -2 lensmap.y)
	DX=`bc <<< "scale=15; $2-($1)"`
	X0=`bc <<< "scale=15; $1+0.5*$DX"`
	DY=`bc <<< "scale=15; $4-($3)"`
	Y0=`bc <<< "scale=15; $3+0.5*$DY"`
	set -- $(tail -1 lensmap.x && tail -1 lensmap.y)
	Xf=`bc <<< "scale=15; $1-0.5*$DX"`
	Yf=`bc <<< "scale=15; $2-0.5*$DY"`
	MIN=`awk 'BEGIN{min=1e30;max=-1e30}{for (i=1; i <= NF; i++) { if ($i > max) max = $i; if ($i < min) min = $i}}END{printf "%.6f", min}' <lensmap.potlog`
	MAX=`awk 'BEGIN{min=1e30;max=-1e30}{for (i=1; i <= NF; i++) { if ($i > max) max = $i; if ($i < min) min = $i}}END{printf "%.6f", max}' <lensmap.potlog`
	STEP=`bc <<< "scale=15; (($MAX)-($MIN))/12"`
	C0=`bc <<< "scale=15; $MIN+3*$STEP"`
	Cf=`bc <<< "scale=15; $MAX-$STEP"`

	PLOTCOMMAND="set contour\nunset surface\nset cntrparam cubicspline levels incr $C0,$STEP,$Cf\nset view map\nset dgrid3d 100,100 qnorm 4\nset table 'contour.txt'\nsplot 'lensmap.potlog' u ($DX*\$1+$X0):($DY*\$2+$Y0):3 matrix\nunset table"
	PLOTCOMMAND="$PLOTCOMMAND\nunset contour\nset surface\nset table 'dgrid.txt';splot 'lensmap.potlog' u ($DX*\$1+$X0):($DY*\$2+$Y0):3 matrix\nunset table"
	PLOTCOMMAND="$PLOTCOMMAND\nreset\nset pm3d map\nunset key\nset palette defined (0 '#352a87', 1 '#0363e1',2 '#1485d4', 3 '#06a7c6', 4 '#38b99e', 5 '#92bf73', 6 '#d9ba56', 7 '#fcce2e', 8 '#f9fb0e')\nset autoscale fix\nset grid"
	PLOTCOMMAND="$PLOTCOMMAND\nset title '$TITLE'\nset xrange [$X0:$Xf]\nset yrange [$Y0:$Yf]\n set size ratio -1\nsplot 'dgrid.txt' w pm3d, 'contour.txt' w l lc rgb 'black'"
	PLOTLINE="set key\n$SETTERM;$PLOTCOMMAND"
elif [[ $COMMAND == "lensmap_maglog" ]]
then
	set -- $(head -2 lensmap.x && head -2 lensmap.y)
	DX=`bc <<< "scale=15; $2-($1)"`
	X0=`bc <<< "scale=15; $1+0.5*$DX"`
	DY=`bc <<< "scale=15; $4-($3)"`
	Y0=`bc <<< "scale=15; $3+0.5*$DY"`

	PLOTCOMMAND="plot $RANGE 'lensmap.maglog' u ($DX*\$1+$X0):($DY*\$2+$Y0):3 matrix w image, '$PLOTDIR/crit.dat' w lines lw $LINEWIDTH lc 0 t 'critical curves'"
	PLOTLINE="unset key\n$SETTERM\n$PLOTCOMMAND"
elif [[ $COMMAND == "lensmap_maglog_nocc" ]]
then
	set -- $(head -2 lensmap.x && head -2 lensmap.y)
	DX=`bc <<< "scale=15; $2-($1)"`
	X0=`bc <<< "scale=15; $1+0.5*$DX"`
	DY=`bc <<< "scale=15; $4-($3)"`
	Y0=`bc <<< "scale=15; $3+0.5*$DY"`

	PLOTCOMMAND="plot $RANGE 'lensmap.maglog' u ($DX*\$1+$X0):($DY*\$2+$Y0):3 matrix w image"
	PLOTLINE="unset key\n$SETTERM\n$PLOTCOMMAND"
else
	echo "Error: unknown argument"
	exit
fi

if [[ $KEY == "1" ]]; then PLOTLINE="set key outside; $PLOTLINE"
elif [[ $KEY == "-1" ]]; then PLOTLINE="set key off; $PLOTLINE"; fi
#PLOTLINE="set key font ',$FONTSIZE'; $PLOTLINE"


if [[ $FILENAME != "" ]]; then
	PLOTFILE=$FILENAME.gnuplot
else
	PLOTFILE=tempplot.gnuplot
fi

echo -en "$PLOTLINE" >$PLOTDIR/$PLOTFILE
#echo "$PLOTLINE"
#gnuplot -persist $PLOTDIR/$PLOTFILE 
gnuplot -persist $PLOTDIR/$PLOTFILE >/dev/null 2>&1

#if [[ $FILENAME == "" ]]; then
	#rm $PLOTDIR/$PLOTFILE
#fi

if [ -f $PLOTDIR/imgdat_notitles.dat ]; then rm $PLOTDIR/imgdat_notitles.dat; fi

